import { Component, ContentChild, ContentChildren, EventEmitter, Input, Output } from '@angular/core';
import { IStates, SelectionType } from "./table-responsive-interface";
import { DataTableColumnDirective } from "../directive/column/column.directive";
import { DatatableRowDetailDirective } from "../directive/row-detail/row-detail.directive";
import * as i0 from "@angular/core";
import * as i1 from "./table-header/table-header.component";
import * as i2 from "./table-body/table-body.component";
import * as i3 from "./table-footer/table-footer.component";
export class TableResponsiveComponent {
    constructor() {
        this.selectionType = SelectionType.simple;
        this._internalColumns = [];
        this.HEIGHT_ROW = 50;
        this.filterHeader = [];
        this.sortHeader = [];
        this.pageSize = Infinity;
        this.selected = [];
        this.activate = new EventEmitter();
        this.refreshProp = new EventEmitter();
        this.addItemProp = new EventEmitter();
        this.onChangePositionRows = new EventEmitter();
    }
    ngOnChanges(changes) {
        if (changes['rows'].currentValue) {
            this.tabledata = [...changes['rows'].currentValue];
            this.tabledataFiltered = [...changes['rows'].currentValue];
            console.log('Table receive data.length:' + this.tabledataFiltered.length);
        }
        this.selected = changes['selected']?.currentValue;
    }
    ngOnInit() {
        this.HEIGHT_HEADER = this.config?.headerHeight ? this.config.headerHeight : this.HEIGHT_HEADER;
        this.HEIGHT_FOOTER = this.config?.footerHeight ? this.config.footerHeight : this.HEIGHT_FOOTER;
        this.HEIGHT_FOOTER = this.config?.rowHeight ? this.config.rowHeight : this.HEIGHT_ROW;
    }
    /**
     * Column templates gathered from `ContentChildren`
     * if described in your markup.
     */
    set columnTemplates(val) {
        this._columnTemplates = val;
        this._internalColumns = val.toArray();
    }
    /**
     * Returns the column templates.
     */
    get columnTemplates() {
        return this._columnTemplates;
    }
    updateFilterInput(keyFilter) {
        this.tabledata = this.rows;
        const foundIndex = this.filterHeader.findIndex((f) => f.key === keyFilter.key);
        if (foundIndex >= 0) {
            // updateFilter from header
            this.filterHeader[foundIndex].value = keyFilter.value;
        }
        else {
            this.filterHeader.push({ key: keyFilter.key, value: keyFilter.value });
        }
        this.tabledata = this.rows;
        this.filterHeader.forEach((keyValFilter) => {
            this.tabledata = this.tabledata.filter((o) => (o[keyValFilter.key] + '').toLowerCase().indexOf((keyValFilter.value + '').toLowerCase()) >= 0);
        });
        this.tabledataFiltered = this.tabledata;
    }
    sortColumnFilterInput(sort) {
        // performance -> do not call again updateFilterInput reason on original daten;
        this.tabledata = [...this.tabledataFiltered];
        const foundIndex = this.sortHeader.findIndex((f) => f.key === sort.key);
        if (foundIndex >= 0) {
            // updateFilter from header
            this.sortHeader[foundIndex].direction = sort.direction;
        }
        else {
            this.sortHeader.push({ key: sort.key, direction: sort.direction });
        }
        this.sortHeader = this.sortHeader.filter((f) => f.direction !== IStates.Nothing);
        const sortByAllKeys = (a, b) => {
            const arr = [];
            this.sortHeader.forEach((r) => {
                let res = (a[r.key] + '')['localeCompare'](b[r.key] + '', 'de', { numeric: true, sensitivity: 'base' });
                res = res === 0
                    ? res
                    : (r.direction === IStates.BiggerToSmaller ? res * -1 : res);
                arr.push(res);
            });
            return arr[0]; // arr.some((s) => s === -1) ? -1 : 1;
        };
        if (this.sortHeader.length > 0) {
            this.tabledata.sort((a, b) => {
                return sortByAllKeys(a, b); // (a[sort.key] + '')['localeCompare'](b[sort.key] + '', 'de', { numeric: true });
            });
            // if (sort.direction === IStates.BiggerToSmaller) {
            //   this.tabledata.reverse();
            // }
        }
    }
    positionRowsChanged(data) {
        this.tabledata = [...data];
        this.tabledataFiltered = [...data];
        this.onChangePositionRows.emit(data);
    }
    onHeaderSelect(event) {
    }
    onBodyPage(event) {
    }
    onSelectRow(row) {
        this.activate?.emit(row);
    }
    onBodyScroll(event) {
    }
    onFooterPage(event) {
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TableResponsiveComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TableResponsiveComponent, selector: "lib-table-responsive", inputs: { rows: "rows", config: "config", selected: "selected", droggableColumns: "droggableColumns", droggableRows: "droggableRows" }, outputs: { activate: "activate", refreshProp: "refreshProp", addItemProp: "addItemProp", onChangePositionRows: "onChangePositionRows" }, queries: [{ propertyName: "rowDetail", first: true, predicate: DatatableRowDetailDirective, descendants: true }, { propertyName: "columnTemplates", predicate: DataTableColumnDirective }], usesOnChanges: true, ngImport: i0, template: "<div class=\"responsive_table\">\n\n  <app-table-header\n    [columns]=\"_internalColumns\"\n    [headerHeight]=\"HEIGHT_HEADER\"\n    [allRowsSelected]=\"selected\"\n    [selectionType]=\"selectionType\"\n    [droggableColumns]=\"droggableColumns\"\n    (select)=\"onHeaderSelect($event)\"\n    (onInputTextKey)=\"updateFilterInput($event)\"\n    (onInputSortKey)=\"sortColumnFilterInput($event)\"\n  ></app-table-header>\n  <app-table-body\n    [config]=\"config\"\n    [rows]=\"tabledata\"\n    [scrollbarV]=\"config.scrollV\"\n    [scrollbarH]=\"config.scrollH\"\n    [loadingIndicator]=\"config.showLoading\"\n    [rowHeight]=\"config.rowHeight\"\n    [rowCount]=\"tabledataFiltered?.length + ''\"\n    [columns]=\"_internalColumns\"\n    [pageSize]=\"pageSize\"\n    [rowDetail]=\"rowDetail\"\n    [rowClass]=\"rowClass\"\n    [selected]=\"selected\"\n    [droggableRows]=\"droggableRows\"\n    (onChangePositionRows)=\"positionRowsChanged($event)\"\n    (page)=\"onBodyPage($event)\"\n    (select)=\"onSelectRow($event)\"\n    (scroll)=\"onBodyScroll($event)\"\n  ></app-table-body>\n  <app-table-footer\n    [rowCount]=\"tabledataFiltered?.length + ''\"\n    [pageSize]=\"pageSize\"\n    [footerHeight]=\"HEIGHT_FOOTER\"\n    [totalMessage]=\"config.messageTableNoData\"\n    (page)=\"onFooterPage($event)\"\n  ></app-table-footer>\n\n<!--  <div *ngIf=\"config.displayTableName\"> &#45;&#45;NAme&#45;&#45; </div>-->\n\n<!--  <mat-divider></mat-divider>-->\n<!--  <div class=\"responsive_table_header\" style=\"height: {{HEIGHT_HEADER}}\">-->\n<!--    <mat-divider vertical=\"true\"></mat-divider>-->\n<!--    <app-reactive-table-inputs-filter [attr]=\"struct\"-->\n<!--                                      (onInputTextKey)=\"updateFilterInput($event)\"-->\n<!--                                      (onInputSortKey)=\"sortColumnFilterInput($event)\"-->\n<!--                                      (addItem)=\"addItemProp.emit()\"-->\n<!--                                      (refresh)=\"refreshProp.emit()\"-->\n<!--    >-->\n<!--    </app-reactive-table-inputs-filter>-->\n<!--    <mat-divider vertical=\"true\"></mat-divider>-->\n<!--  </div>-->\n\n<!--  <div class=\"responsive_table_header_loading\" *ngIf=\"config?.showLoading && !rows\">-->\n<!--    <mat-divider></mat-divider>-->\n<!--    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>-->\n<!--  </div>-->\n\n<!--  <mat-divider></mat-divider>-->\n\n<!--  <div class=\"responsive_table_body\">-->\n<!--    <mat-divider vertical=\"true\"></mat-divider>-->\n<!--    <app-reactive-table-row-cell [data]=\"tabledata\"-->\n<!--                                 [attr]=\"struct\"-->\n<!--                                 (onClickRow)=\"config.onSelectRow($event)\"-->\n<!--                                 [config]=\"config\"-->\n<!--    >-->\n<!--    </app-reactive-table-row-cell>-->\n<!--    <mat-divider vertical=\"true\"></mat-divider>-->\n<!--  </div>-->\n\n<!--  <mat-divider></mat-divider>-->\n<!--  <div *ngIf=\"!config?.displayFooter === false\" class=\"responsive_table_footer\" style=\"height: {{HEIGHT_FOOTER}}\">-->\n<!--    <mat-divider vertical=\"true\"></mat-divider>-->\n<!--    <app-app-reactive-table-footer></app-app-reactive-table-footer>-->\n<!--    <mat-divider vertical=\"true\" style=\"height: 100%\"></mat-divider>-->\n<!--  </div>-->\n<!--  <mat-divider></mat-divider>-->\n</div>\n", styles: [".flex_column,.flex_column_min_width_height,.responsive_table,:host{display:flex;flex:1;flex-direction:column}.flex_row{display:flex;flex:1;flex-direction:row}.max_height_width{height:100%;width:100%;min-width:0;min-height:0}.flex_column_min_width_height,.responsive_table,:host{min-width:0;min-height:0}*{scrollbar-width:thin;scrollbar-color:#5287bd #DFE9EB}*::-webkit-scrollbar{height:10px;width:10px}*::-webkit-scrollbar-track{border-radius:3px;background-color:#d3d8da}*::-webkit-scrollbar-track:hover{background-color:#b8c0c2}*::-webkit-scrollbar-track:active{background-color:#b8c0c2}*::-webkit-scrollbar-thumb{border-radius:3px;background-color:#5287bd}*::-webkit-scrollbar-thumb:hover{background-color:#77a1cb}*::-webkit-scrollbar-thumb:active{background-color:#3d6e9f}.responsive_table{border:1px solid #5287bd}.responsive_table .responsive_table_header{display:flex;background-color:#5287bd;color:#fff}.responsive_table .responsive_table_body{min-width:0;min-height:0;display:flex;flex:1}.responsive_table .responsive_table_footer{display:flex}\n"], dependencies: [{ kind: "component", type: i1.TableHeaderComponent, selector: "app-table-header", inputs: ["columns", "headerHeight", "allRowsSelected", "selectionType", "droggableColumns"], outputs: ["select", "onInputTextKey", "onInputSortKey", "addItem", "refresh"] }, { kind: "component", type: i2.TableBodyComponent, selector: "app-table-body", inputs: ["config", "columns", "rows", "scrollbarV", "scrollbarH", "loadingIndicator", "rowHeight", "rowCount", "pageSize", "rowDetail", "rowClass", "selected", "droggableRows"], outputs: ["page", "select", "onChangePositionRows", "scroll"] }, { kind: "component", type: i3.TableFooterComponent, selector: "app-table-footer", inputs: ["rowCount", "pageSize", "footerHeight", "totalMessage"], outputs: ["page"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TableResponsiveComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-table-responsive', template: "<div class=\"responsive_table\">\n\n  <app-table-header\n    [columns]=\"_internalColumns\"\n    [headerHeight]=\"HEIGHT_HEADER\"\n    [allRowsSelected]=\"selected\"\n    [selectionType]=\"selectionType\"\n    [droggableColumns]=\"droggableColumns\"\n    (select)=\"onHeaderSelect($event)\"\n    (onInputTextKey)=\"updateFilterInput($event)\"\n    (onInputSortKey)=\"sortColumnFilterInput($event)\"\n  ></app-table-header>\n  <app-table-body\n    [config]=\"config\"\n    [rows]=\"tabledata\"\n    [scrollbarV]=\"config.scrollV\"\n    [scrollbarH]=\"config.scrollH\"\n    [loadingIndicator]=\"config.showLoading\"\n    [rowHeight]=\"config.rowHeight\"\n    [rowCount]=\"tabledataFiltered?.length + ''\"\n    [columns]=\"_internalColumns\"\n    [pageSize]=\"pageSize\"\n    [rowDetail]=\"rowDetail\"\n    [rowClass]=\"rowClass\"\n    [selected]=\"selected\"\n    [droggableRows]=\"droggableRows\"\n    (onChangePositionRows)=\"positionRowsChanged($event)\"\n    (page)=\"onBodyPage($event)\"\n    (select)=\"onSelectRow($event)\"\n    (scroll)=\"onBodyScroll($event)\"\n  ></app-table-body>\n  <app-table-footer\n    [rowCount]=\"tabledataFiltered?.length + ''\"\n    [pageSize]=\"pageSize\"\n    [footerHeight]=\"HEIGHT_FOOTER\"\n    [totalMessage]=\"config.messageTableNoData\"\n    (page)=\"onFooterPage($event)\"\n  ></app-table-footer>\n\n<!--  <div *ngIf=\"config.displayTableName\"> &#45;&#45;NAme&#45;&#45; </div>-->\n\n<!--  <mat-divider></mat-divider>-->\n<!--  <div class=\"responsive_table_header\" style=\"height: {{HEIGHT_HEADER}}\">-->\n<!--    <mat-divider vertical=\"true\"></mat-divider>-->\n<!--    <app-reactive-table-inputs-filter [attr]=\"struct\"-->\n<!--                                      (onInputTextKey)=\"updateFilterInput($event)\"-->\n<!--                                      (onInputSortKey)=\"sortColumnFilterInput($event)\"-->\n<!--                                      (addItem)=\"addItemProp.emit()\"-->\n<!--                                      (refresh)=\"refreshProp.emit()\"-->\n<!--    >-->\n<!--    </app-reactive-table-inputs-filter>-->\n<!--    <mat-divider vertical=\"true\"></mat-divider>-->\n<!--  </div>-->\n\n<!--  <div class=\"responsive_table_header_loading\" *ngIf=\"config?.showLoading && !rows\">-->\n<!--    <mat-divider></mat-divider>-->\n<!--    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>-->\n<!--  </div>-->\n\n<!--  <mat-divider></mat-divider>-->\n\n<!--  <div class=\"responsive_table_body\">-->\n<!--    <mat-divider vertical=\"true\"></mat-divider>-->\n<!--    <app-reactive-table-row-cell [data]=\"tabledata\"-->\n<!--                                 [attr]=\"struct\"-->\n<!--                                 (onClickRow)=\"config.onSelectRow($event)\"-->\n<!--                                 [config]=\"config\"-->\n<!--    >-->\n<!--    </app-reactive-table-row-cell>-->\n<!--    <mat-divider vertical=\"true\"></mat-divider>-->\n<!--  </div>-->\n\n<!--  <mat-divider></mat-divider>-->\n<!--  <div *ngIf=\"!config?.displayFooter === false\" class=\"responsive_table_footer\" style=\"height: {{HEIGHT_FOOTER}}\">-->\n<!--    <mat-divider vertical=\"true\"></mat-divider>-->\n<!--    <app-app-reactive-table-footer></app-app-reactive-table-footer>-->\n<!--    <mat-divider vertical=\"true\" style=\"height: 100%\"></mat-divider>-->\n<!--  </div>-->\n<!--  <mat-divider></mat-divider>-->\n</div>\n", styles: [".flex_column,.flex_column_min_width_height,.responsive_table,:host{display:flex;flex:1;flex-direction:column}.flex_row{display:flex;flex:1;flex-direction:row}.max_height_width{height:100%;width:100%;min-width:0;min-height:0}.flex_column_min_width_height,.responsive_table,:host{min-width:0;min-height:0}*{scrollbar-width:thin;scrollbar-color:#5287bd #DFE9EB}*::-webkit-scrollbar{height:10px;width:10px}*::-webkit-scrollbar-track{border-radius:3px;background-color:#d3d8da}*::-webkit-scrollbar-track:hover{background-color:#b8c0c2}*::-webkit-scrollbar-track:active{background-color:#b8c0c2}*::-webkit-scrollbar-thumb{border-radius:3px;background-color:#5287bd}*::-webkit-scrollbar-thumb:hover{background-color:#77a1cb}*::-webkit-scrollbar-thumb:active{background-color:#3d6e9f}.responsive_table{border:1px solid #5287bd}.responsive_table .responsive_table_header{display:flex;background-color:#5287bd;color:#fff}.responsive_table .responsive_table_body{min-width:0;min-height:0;display:flex;flex:1}.responsive_table .responsive_table_footer{display:flex}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { rows: [{
                type: Input
            }], config: [{
                type: Input
            }], selected: [{
                type: Input
            }], droggableColumns: [{
                type: Input
            }], droggableRows: [{
                type: Input
            }], activate: [{
                type: Output
            }], refreshProp: [{
                type: Output
            }], addItemProp: [{
                type: Output
            }], onChangePositionRows: [{
                type: Output
            }], columnTemplates: [{
                type: ContentChildren,
                args: [DataTableColumnDirective]
            }], rowDetail: [{
                type: ContentChild,
                args: [DatatableRowDetailDirective]
            }] } });
//# sourceMappingURL=data:application/json;base64,