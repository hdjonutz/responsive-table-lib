import { Component, EventEmitter, Input, Output } from '@angular/core';
import { moveItemInArray } from '@angular/cdk/drag-drop';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/cdk/drag-drop";
export class ReactiveTableRowCellComponent {
    constructor(tableBody) {
        this.rowClickIndex = null;
        this.onClickRow = new EventEmitter();
        this.onChangePositionRows = new EventEmitter();
        this._tableBody = tableBody;
    }
    ngOnInit() { }
    updateOnClickRow(row, cell, index) {
        console.log(row, cell);
        this.rowClickIndex = index;
        this.onClickRow.emit({ row: row, item: cell });
    }
    ngOnChanges(changes) {
        console.log(changes);
        if (changes?.['data'].currentValue) {
            this.dataToDisplay = [...changes?.['data'].currentValue];
        }
    }
    drop(event) {
        moveItemInArray(this.data, event.previousIndex, event.currentIndex);
        console.log(this.data);
        this.onChangePositionRows?.emit(this.data);
    }
    printV(a, b, value) {
        console.log(a, b, value);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ReactiveTableRowCellComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: ReactiveTableRowCellComponent, selector: "app-reactive-table-row-cell", inputs: { data: "data", columns: "columns", config: "config", droggableRows: "droggableRows" }, outputs: { onClickRow: "onClickRow", onChangePositionRows: "onChangePositionRows" }, usesOnChanges: true, ngImport: i0, template: "<div class=\"responsive_table_rows\">\n\n  <div class=\"responsive_table_header_loading\" *ngIf=\"config && dataToDisplay?.length === 0\">\n    {{config.messageTableNoData}}\n  </div>\n\n<!--  <div class=\"responsive_table_row\">-->\n<!--    <div *ngFor=\"let att of columns;\" class=\"responsive_table_row_cell\"-->\n<!--         style=\"width: {{(att['width'] || att['style']?.['width'])+'px'}};-->\n<!--            max-width: {{(att['maxWidth'] || att['style']?.['maxWidth'])+'px'}};-->\n<!--            min-width: {{(att['minWidth'] || att['style']?.['minWidth'])+'px'}}\">[xxx]</div>-->\n<!--  </div>-->\n\n  <ng-container *ngIf=\"droggableRows; then templateDroggrable; else templateSimple\"></ng-container>\n  <ng-template #templateDroggrable>\n    <div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\n      <div *ngFor=\"let row of dataToDisplay; let i = index\" class=\"responsive_table_row example-box\" cdkDragBoundary=\".responsive_table_rows\" cdkDrag\n           style=\"height:{{config.rowHeight+'px'}}\"\n           [class.selected] = \"rowClickIndex == i\">\n\n              <ng-container *ngFor=\"let att of columns;\">\n                <div class=\"responsive_table_row_cell\"\n                     (click)=\"updateOnClickRow(row, row[att.key], i)\"\n                     style=\"width: {{(att['width'] || att['style']?.['width'])+'px'}};\n                  max-width: {{(att['maxWidth'] || att['style']?.['maxWidth'])+'px'}};\n                  min-width: {{(att['minWidth'] || att['style']?.['minWidth'])+'px'}}\"\n                >\n                  <ng-container *ngIf=\"row[att.key] !== undefined; then _fullCell; else _emptyCellTemplateOutlet\"></ng-container>\n                  <ng-template #_fullCell [ngTemplateOutlet]=\"att.cellTemplate\" [ngTemplateOutletContext]=\"{row: row, value: row[att.key]}\">\n                    <div *ngIf=\"!att.cellTemplate\">{{row[att.key]}}</div>\n                  </ng-template>\n                  <ng-template #_emptyCellTemplateOutlet>\n<!--                    <div [ngTemplateOutlet]=\"att.cellTemplate\"></div>-->\n                  </ng-template>\n                </div>\n              </ng-container>\n\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #templateSimple>\n    <div *ngFor=\"let row of dataToDisplay; let i = index\" class=\"responsive_table_row\"\n         style=\"height:{{config.rowHeight+'px'}}\"\n         [class.selected] = \"rowClickIndex == i\">\n\n      <ng-container *ngFor=\"let att of columns;\">\n        <div class=\"responsive_table_row_cell\"\n             (click)=\"updateOnClickRow(row, row[att.key], i)\"\n             style=\"width: {{(att['width'] || att['style']?.['width'])+'px'}};\n            max-width: {{(att['maxWidth'] || att['style']?.['maxWidth'])+'px'}};\n            min-width: {{(att['minWidth'] || att['style']?.['minWidth'])+'px'}}\"\n        >\n          <ng-container *ngIf=\"row[att.key] !== undefined; then fullCell; else emptyCellTemplateOutlet\"></ng-container>\n          <ng-template #fullCell [ngTemplateOutlet]=\"att.cellTemplate\"  [ngTemplateOutletContext]=\"{row: row, value: row[att.key]}\">\n            <div *ngIf=\"!att.cellTemplate\">{{row[att.key]}}</div>\n          </ng-template>\n          <ng-template #emptyCellTemplateOutlet>\n<!--            <div [ngTemplateOutlet]=\"att.cellTemplate\"></div>-->\n          </ng-template>\n        </div>\n\n      </ng-container>\n\n    </div>\n\n  </ng-template>\n\n</div>\n", styles: [".flex_column,.responsive_table_rows,:host,.flex_column_min_width_height{display:flex;flex:1;flex-direction:column}.flex_row{display:flex;flex:1;flex-direction:row}.max_height_width{height:100%;width:100%;min-width:0;min-height:0}.flex_column_min_width_height{min-width:0;min-height:0}*{scrollbar-width:thin;scrollbar-color:#5287bd #DFE9EB}*::-webkit-scrollbar{height:10px;width:10px}*::-webkit-scrollbar-track{border-radius:3px;background-color:#d3d8da}*::-webkit-scrollbar-track:hover{background-color:#b8c0c2}*::-webkit-scrollbar-track:active{background-color:#b8c0c2}*::-webkit-scrollbar-thumb{border-radius:3px;background-color:#5287bd}*::-webkit-scrollbar-thumb:hover{background-color:#77a1cb}*::-webkit-scrollbar-thumb:active{background-color:#3d6e9f}:host{overflow-y:scroll}.responsive_table_rows .responsive_table_header_loading{display:flex;justify-content:center}.responsive_table_rows .responsive_table_row{display:flex;flex-direction:row;width:100%;border-bottom:1px solid #e9e9e9}.responsive_table_rows .responsive_table_row:nth-child(2n){background-color:#dee8f380}.responsive_table_rows .responsive_table_row:nth-child(odd){background-color:#f1f5fa80}.responsive_table_rows .responsive_table_row:hover{background-color:#c1d4e780;cursor:pointer}.responsive_table_rows .responsive_table_row.selected{background-color:#9cbad980}.responsive_table_rows .responsive_table_row .responsive_table_row_cell{display:flex;padding:2px;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center}.responsive_table_rows .responsive_table_row .responsive_table_row_cell.hide{visibility:hidden}.responsive_table_rows .example-list .example-box{cursor:move}.responsive_table_rows .cdk-drag-preview{background-color:red;box-sizing:border-box;height:50px;display:flex;width:100%;flex-direction:row;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.responsive_table_rows .cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder):nth-child(2n){background-color:#e2b38e}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder):nth-child(odd){background-color:#e8c0a2}::ng-deep .cdk-drag{background-color:#5287bd}::ng-deep .cdk-drag.responsive_table_row.cdk-drag-preview{background-color:#bc8ce8;display:flex;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center}::ng-deep .cdk-drag.responsive_table_row .responsive_table_row_cell{display:flex;width:100%;padding:2px;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center}::ng-deep .cdk-drag.responsive_table_row .responsive_table_row_cell.hide{visibility:hidden}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i2.CdkDropList, selector: "[cdkDropList], cdk-drop-list", inputs: ["cdkDropListConnectedTo", "cdkDropListData", "cdkDropListOrientation", "id", "cdkDropListLockAxis", "cdkDropListDisabled", "cdkDropListSortingDisabled", "cdkDropListEnterPredicate", "cdkDropListSortPredicate", "cdkDropListAutoScrollDisabled", "cdkDropListAutoScrollStep"], outputs: ["cdkDropListDropped", "cdkDropListEntered", "cdkDropListExited", "cdkDropListSorted"], exportAs: ["cdkDropList"] }, { kind: "directive", type: i2.CdkDrag, selector: "[cdkDrag]", inputs: ["cdkDragData", "cdkDragLockAxis", "cdkDragRootElement", "cdkDragBoundary", "cdkDragStartDelay", "cdkDragFreeDragPosition", "cdkDragDisabled", "cdkDragConstrainPosition", "cdkDragPreviewClass", "cdkDragPreviewContainer"], outputs: ["cdkDragStarted", "cdkDragReleased", "cdkDragEnded", "cdkDragEntered", "cdkDragExited", "cdkDragDropped", "cdkDragMoved"], exportAs: ["cdkDrag"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ReactiveTableRowCellComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-reactive-table-row-cell', template: "<div class=\"responsive_table_rows\">\n\n  <div class=\"responsive_table_header_loading\" *ngIf=\"config && dataToDisplay?.length === 0\">\n    {{config.messageTableNoData}}\n  </div>\n\n<!--  <div class=\"responsive_table_row\">-->\n<!--    <div *ngFor=\"let att of columns;\" class=\"responsive_table_row_cell\"-->\n<!--         style=\"width: {{(att['width'] || att['style']?.['width'])+'px'}};-->\n<!--            max-width: {{(att['maxWidth'] || att['style']?.['maxWidth'])+'px'}};-->\n<!--            min-width: {{(att['minWidth'] || att['style']?.['minWidth'])+'px'}}\">[xxx]</div>-->\n<!--  </div>-->\n\n  <ng-container *ngIf=\"droggableRows; then templateDroggrable; else templateSimple\"></ng-container>\n  <ng-template #templateDroggrable>\n    <div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\n      <div *ngFor=\"let row of dataToDisplay; let i = index\" class=\"responsive_table_row example-box\" cdkDragBoundary=\".responsive_table_rows\" cdkDrag\n           style=\"height:{{config.rowHeight+'px'}}\"\n           [class.selected] = \"rowClickIndex == i\">\n\n              <ng-container *ngFor=\"let att of columns;\">\n                <div class=\"responsive_table_row_cell\"\n                     (click)=\"updateOnClickRow(row, row[att.key], i)\"\n                     style=\"width: {{(att['width'] || att['style']?.['width'])+'px'}};\n                  max-width: {{(att['maxWidth'] || att['style']?.['maxWidth'])+'px'}};\n                  min-width: {{(att['minWidth'] || att['style']?.['minWidth'])+'px'}}\"\n                >\n                  <ng-container *ngIf=\"row[att.key] !== undefined; then _fullCell; else _emptyCellTemplateOutlet\"></ng-container>\n                  <ng-template #_fullCell [ngTemplateOutlet]=\"att.cellTemplate\" [ngTemplateOutletContext]=\"{row: row, value: row[att.key]}\">\n                    <div *ngIf=\"!att.cellTemplate\">{{row[att.key]}}</div>\n                  </ng-template>\n                  <ng-template #_emptyCellTemplateOutlet>\n<!--                    <div [ngTemplateOutlet]=\"att.cellTemplate\"></div>-->\n                  </ng-template>\n                </div>\n              </ng-container>\n\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #templateSimple>\n    <div *ngFor=\"let row of dataToDisplay; let i = index\" class=\"responsive_table_row\"\n         style=\"height:{{config.rowHeight+'px'}}\"\n         [class.selected] = \"rowClickIndex == i\">\n\n      <ng-container *ngFor=\"let att of columns;\">\n        <div class=\"responsive_table_row_cell\"\n             (click)=\"updateOnClickRow(row, row[att.key], i)\"\n             style=\"width: {{(att['width'] || att['style']?.['width'])+'px'}};\n            max-width: {{(att['maxWidth'] || att['style']?.['maxWidth'])+'px'}};\n            min-width: {{(att['minWidth'] || att['style']?.['minWidth'])+'px'}}\"\n        >\n          <ng-container *ngIf=\"row[att.key] !== undefined; then fullCell; else emptyCellTemplateOutlet\"></ng-container>\n          <ng-template #fullCell [ngTemplateOutlet]=\"att.cellTemplate\"  [ngTemplateOutletContext]=\"{row: row, value: row[att.key]}\">\n            <div *ngIf=\"!att.cellTemplate\">{{row[att.key]}}</div>\n          </ng-template>\n          <ng-template #emptyCellTemplateOutlet>\n<!--            <div [ngTemplateOutlet]=\"att.cellTemplate\"></div>-->\n          </ng-template>\n        </div>\n\n      </ng-container>\n\n    </div>\n\n  </ng-template>\n\n</div>\n", styles: [".flex_column,.responsive_table_rows,:host,.flex_column_min_width_height{display:flex;flex:1;flex-direction:column}.flex_row{display:flex;flex:1;flex-direction:row}.max_height_width{height:100%;width:100%;min-width:0;min-height:0}.flex_column_min_width_height{min-width:0;min-height:0}*{scrollbar-width:thin;scrollbar-color:#5287bd #DFE9EB}*::-webkit-scrollbar{height:10px;width:10px}*::-webkit-scrollbar-track{border-radius:3px;background-color:#d3d8da}*::-webkit-scrollbar-track:hover{background-color:#b8c0c2}*::-webkit-scrollbar-track:active{background-color:#b8c0c2}*::-webkit-scrollbar-thumb{border-radius:3px;background-color:#5287bd}*::-webkit-scrollbar-thumb:hover{background-color:#77a1cb}*::-webkit-scrollbar-thumb:active{background-color:#3d6e9f}:host{overflow-y:scroll}.responsive_table_rows .responsive_table_header_loading{display:flex;justify-content:center}.responsive_table_rows .responsive_table_row{display:flex;flex-direction:row;width:100%;border-bottom:1px solid #e9e9e9}.responsive_table_rows .responsive_table_row:nth-child(2n){background-color:#dee8f380}.responsive_table_rows .responsive_table_row:nth-child(odd){background-color:#f1f5fa80}.responsive_table_rows .responsive_table_row:hover{background-color:#c1d4e780;cursor:pointer}.responsive_table_rows .responsive_table_row.selected{background-color:#9cbad980}.responsive_table_rows .responsive_table_row .responsive_table_row_cell{display:flex;padding:2px;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center}.responsive_table_rows .responsive_table_row .responsive_table_row_cell.hide{visibility:hidden}.responsive_table_rows .example-list .example-box{cursor:move}.responsive_table_rows .cdk-drag-preview{background-color:red;box-sizing:border-box;height:50px;display:flex;width:100%;flex-direction:row;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.responsive_table_rows .cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder):nth-child(2n){background-color:#e2b38e}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder):nth-child(odd){background-color:#e8c0a2}::ng-deep .cdk-drag{background-color:#5287bd}::ng-deep .cdk-drag.responsive_table_row.cdk-drag-preview{background-color:#bc8ce8;display:flex;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center}::ng-deep .cdk-drag.responsive_table_row .responsive_table_row_cell{display:flex;width:100%;padding:2px;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center}::ng-deep .cdk-drag.responsive_table_row .responsive_table_row_cell.hide{visibility:hidden}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{
                type: Input
            }], columns: [{
                type: Input
            }], config: [{
                type: Input
            }], droggableRows: [{
                type: Input
            }], onClickRow: [{
                type: Output
            }], onChangePositionRows: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhY3RpdmUtdGFibGUtcm93LWNlbGwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdGFibGUtcmVzcG9uc2l2ZS9zcmMvbGliL2NvbXBvbmVudHMvcmVhY3RpdmUtdGFibGUtcm93LWNlbGwvcmVhY3RpdmUtdGFibGUtcm93LWNlbGwuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdGFibGUtcmVzcG9uc2l2ZS9zcmMvbGliL2NvbXBvbmVudHMvcmVhY3RpdmUtdGFibGUtcm93LWNlbGwvcmVhY3RpdmUtdGFibGUtcm93LWNlbGwuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsRUFFVCxZQUFZLEVBQ1osS0FBSyxFQUdMLE1BQU0sRUFFUCxNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQWMsZUFBZSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7Ozs7QUFPcEUsTUFBTSxPQUFPLDZCQUE2QjtJQWV4QyxZQUFZLFNBQXFCO1FBYmpDLGtCQUFhLEdBQVcsSUFBVyxDQUFDO1FBTTFCLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBeUIsQ0FBQztRQUN2RCx5QkFBb0IsR0FBRyxJQUFJLFlBQVksRUFBeUMsQ0FBQztRQU96RixJQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztJQUM5QixDQUFDO0lBRUQsUUFBUSxLQUFVLENBQUM7SUFFbkIsZ0JBQWdCLENBQUMsR0FBeUIsRUFBRSxJQUEwQixFQUFFLEtBQWE7UUFDbkYsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDdkIsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7UUFDM0IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNyQixJQUFJLE9BQU8sRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFlBQVksRUFBRTtZQUNsQyxJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsR0FBRyxPQUFPLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUMxRDtJQUNILENBQUM7SUFDRCxJQUFJLENBQUMsS0FBNEI7UUFDL0IsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLGFBQWEsRUFBRSxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDcEUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkIsSUFBSSxDQUFDLG9CQUFvQixFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUVELE1BQU0sQ0FBQyxDQUFNLEVBQUUsQ0FBTyxFQUFFLEtBQVc7UUFDakMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzFCLENBQUM7K0dBekNVLDZCQUE2QjttR0FBN0IsNkJBQTZCLDZRQ2xCMUMseTZHQXFFQTs7NEZEbkRhLDZCQUE2QjtrQkFMekMsU0FBUzsrQkFDRSw2QkFBNkI7aUdBTzlCLElBQUk7c0JBQVosS0FBSztnQkFDRyxPQUFPO3NCQUFmLEtBQUs7Z0JBQ0csTUFBTTtzQkFBZCxLQUFLO2dCQUNHLGFBQWE7c0JBQXJCLEtBQUs7Z0JBRUksVUFBVTtzQkFBbkIsTUFBTTtnQkFDRyxvQkFBb0I7c0JBQTdCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE9uQ2hhbmdlcyxcbiAgT25Jbml0LFxuICBPdXRwdXQsXG4gIFNpbXBsZUNoYW5nZXNcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0lSZXNwb25zaXZlVGFibGVDb25maWd9IGZyb20gXCIuLi90YWJsZS1yZXNwb25zaXZlLWludGVyZmFjZVwiO1xuaW1wb3J0IHtDZGtEcmFnRHJvcCwgbW92ZUl0ZW1JbkFycmF5fSBmcm9tICdAYW5ndWxhci9jZGsvZHJhZy1kcm9wJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYXBwLXJlYWN0aXZlLXRhYmxlLXJvdy1jZWxsJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3JlYWN0aXZlLXRhYmxlLXJvdy1jZWxsLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vcmVhY3RpdmUtdGFibGUtcm93LWNlbGwuY29tcG9uZW50LnNjc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgUmVhY3RpdmVUYWJsZVJvd0NlbGxDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlc3tcblxuICByb3dDbGlja0luZGV4OiBudW1iZXIgPSBudWxsIGFzIGFueTtcbiAgQElucHV0KCkgZGF0YSE6ICAgICBBcnJheTx7W2tleTogc3RyaW5nXTogc3RyaW5nfG51bWJlcn0+O1xuICBASW5wdXQoKSBjb2x1bW5zITogIEFycmF5PGFueT47XG4gIEBJbnB1dCgpIGNvbmZpZyE6ICAgSVJlc3BvbnNpdmVUYWJsZUNvbmZpZztcbiAgQElucHV0KCkgZHJvZ2dhYmxlUm93cyE6IGJvb2xlYW47XG5cbiAgQE91dHB1dCgpIG9uQ2xpY2tSb3cgPSBuZXcgRXZlbnRFbWl0dGVyPHtyb3c6IGFueSwgaXRlbTogYW55fT4oKTtcbiAgQE91dHB1dCgpIG9uQ2hhbmdlUG9zaXRpb25Sb3dzID0gbmV3IEV2ZW50RW1pdHRlcjxBcnJheTx7W2tleTogc3RyaW5nXTogc3RyaW5nfG51bWJlcn0+PigpO1xuXG4gIF90YWJsZUJvZHkhOiBFbGVtZW50UmVmO1xuICBkYXRhVG9EaXNwbGF5ITogQXJyYXk8e1trZXk6IHN0cmluZ106IGFueX0+O1xuICBjZWxsQ29udGV4dDogYW55O1xuXG4gIGNvbnN0cnVjdG9yKHRhYmxlQm9keTogRWxlbWVudFJlZikge1xuICAgIHRoaXMuX3RhYmxlQm9keSA9IHRhYmxlQm9keTtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge31cblxuICB1cGRhdGVPbkNsaWNrUm93KHJvdzoge1trZXk6IHN0cmluZ106IGFueX0sIGNlbGw6IHtba2V5OiBzdHJpbmddOiBhbnl9LCBpbmRleDogbnVtYmVyKSB7XG4gICAgY29uc29sZS5sb2cocm93LCBjZWxsKTtcbiAgICB0aGlzLnJvd0NsaWNrSW5kZXggPSBpbmRleDtcbiAgICB0aGlzLm9uQ2xpY2tSb3cuZW1pdCh7cm93OiByb3csIGl0ZW06IGNlbGx9KTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBjb25zb2xlLmxvZyhjaGFuZ2VzKTtcbiAgICBpZiAoY2hhbmdlcz8uWydkYXRhJ10uY3VycmVudFZhbHVlKSB7XG4gICAgICB0aGlzLmRhdGFUb0Rpc3BsYXkgPSBbLi4uY2hhbmdlcz8uWydkYXRhJ10uY3VycmVudFZhbHVlXTtcbiAgICB9XG4gIH1cbiAgZHJvcChldmVudDogQ2RrRHJhZ0Ryb3A8c3RyaW5nW10+KSB7XG4gICAgbW92ZUl0ZW1JbkFycmF5KHRoaXMuZGF0YSwgZXZlbnQucHJldmlvdXNJbmRleCwgZXZlbnQuY3VycmVudEluZGV4KTtcbiAgICBjb25zb2xlLmxvZyh0aGlzLmRhdGEpO1xuICAgIHRoaXMub25DaGFuZ2VQb3NpdGlvblJvd3M/LmVtaXQodGhpcy5kYXRhKTtcbiAgfVxuXG4gIHByaW50VihhOiBhbnksIGI/OiBhbnksIHZhbHVlPzogYW55KXtcbiAgICBjb25zb2xlLmxvZyhhLGIsIHZhbHVlKTtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cInJlc3BvbnNpdmVfdGFibGVfcm93c1wiPlxuXG4gIDxkaXYgY2xhc3M9XCJyZXNwb25zaXZlX3RhYmxlX2hlYWRlcl9sb2FkaW5nXCIgKm5nSWY9XCJjb25maWcgJiYgZGF0YVRvRGlzcGxheT8ubGVuZ3RoID09PSAwXCI+XG4gICAge3tjb25maWcubWVzc2FnZVRhYmxlTm9EYXRhfX1cbiAgPC9kaXY+XG5cbjwhLS0gIDxkaXYgY2xhc3M9XCJyZXNwb25zaXZlX3RhYmxlX3Jvd1wiPi0tPlxuPCEtLSAgICA8ZGl2ICpuZ0Zvcj1cImxldCBhdHQgb2YgY29sdW1ucztcIiBjbGFzcz1cInJlc3BvbnNpdmVfdGFibGVfcm93X2NlbGxcIi0tPlxuPCEtLSAgICAgICAgIHN0eWxlPVwid2lkdGg6IHt7KGF0dFsnd2lkdGgnXSB8fCBhdHRbJ3N0eWxlJ10/Llsnd2lkdGgnXSkrJ3B4J319Oy0tPlxuPCEtLSAgICAgICAgICAgIG1heC13aWR0aDoge3soYXR0WydtYXhXaWR0aCddIHx8IGF0dFsnc3R5bGUnXT8uWydtYXhXaWR0aCddKSsncHgnfX07LS0+XG48IS0tICAgICAgICAgICAgbWluLXdpZHRoOiB7eyhhdHRbJ21pbldpZHRoJ10gfHwgYXR0WydzdHlsZSddPy5bJ21pbldpZHRoJ10pKydweCd9fVwiPlt4eHhdPC9kaXY+LS0+XG48IS0tICA8L2Rpdj4tLT5cblxuICA8bmctY29udGFpbmVyICpuZ0lmPVwiZHJvZ2dhYmxlUm93czsgdGhlbiB0ZW1wbGF0ZURyb2dncmFibGU7IGVsc2UgdGVtcGxhdGVTaW1wbGVcIj48L25nLWNvbnRhaW5lcj5cbiAgPG5nLXRlbXBsYXRlICN0ZW1wbGF0ZURyb2dncmFibGU+XG4gICAgPGRpdiBjZGtEcm9wTGlzdCBjbGFzcz1cImV4YW1wbGUtbGlzdFwiIChjZGtEcm9wTGlzdERyb3BwZWQpPVwiZHJvcCgkZXZlbnQpXCI+XG4gICAgICA8ZGl2ICpuZ0Zvcj1cImxldCByb3cgb2YgZGF0YVRvRGlzcGxheTsgbGV0IGkgPSBpbmRleFwiIGNsYXNzPVwicmVzcG9uc2l2ZV90YWJsZV9yb3cgZXhhbXBsZS1ib3hcIiBjZGtEcmFnQm91bmRhcnk9XCIucmVzcG9uc2l2ZV90YWJsZV9yb3dzXCIgY2RrRHJhZ1xuICAgICAgICAgICBzdHlsZT1cImhlaWdodDp7e2NvbmZpZy5yb3dIZWlnaHQrJ3B4J319XCJcbiAgICAgICAgICAgW2NsYXNzLnNlbGVjdGVkXSA9IFwicm93Q2xpY2tJbmRleCA9PSBpXCI+XG5cbiAgICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgYXR0IG9mIGNvbHVtbnM7XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJlc3BvbnNpdmVfdGFibGVfcm93X2NlbGxcIlxuICAgICAgICAgICAgICAgICAgICAgKGNsaWNrKT1cInVwZGF0ZU9uQ2xpY2tSb3cocm93LCByb3dbYXR0LmtleV0sIGkpXCJcbiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPVwid2lkdGg6IHt7KGF0dFsnd2lkdGgnXSB8fCBhdHRbJ3N0eWxlJ10/Llsnd2lkdGgnXSkrJ3B4J319O1xuICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiB7eyhhdHRbJ21heFdpZHRoJ10gfHwgYXR0WydzdHlsZSddPy5bJ21heFdpZHRoJ10pKydweCd9fTtcbiAgICAgICAgICAgICAgICAgIG1pbi13aWR0aDoge3soYXR0WydtaW5XaWR0aCddIHx8IGF0dFsnc3R5bGUnXT8uWydtaW5XaWR0aCddKSsncHgnfX1cIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJyb3dbYXR0LmtleV0gIT09IHVuZGVmaW5lZDsgdGhlbiBfZnVsbENlbGw7IGVsc2UgX2VtcHR5Q2VsbFRlbXBsYXRlT3V0bGV0XCI+PC9uZy1jb250YWluZXI+XG4gICAgICAgICAgICAgICAgICA8bmctdGVtcGxhdGUgI19mdWxsQ2VsbCBbbmdUZW1wbGF0ZU91dGxldF09XCJhdHQuY2VsbFRlbXBsYXRlXCIgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cIntyb3c6IHJvdywgdmFsdWU6IHJvd1thdHQua2V5XX1cIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiAqbmdJZj1cIiFhdHQuY2VsbFRlbXBsYXRlXCI+e3tyb3dbYXR0LmtleV19fTwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSAjX2VtcHR5Q2VsbFRlbXBsYXRlT3V0bGV0PlxuPCEtLSAgICAgICAgICAgICAgICAgICAgPGRpdiBbbmdUZW1wbGF0ZU91dGxldF09XCJhdHQuY2VsbFRlbXBsYXRlXCI+PC9kaXY+LS0+XG4gICAgICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cblxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvbmctdGVtcGxhdGU+XG5cbiAgPG5nLXRlbXBsYXRlICN0ZW1wbGF0ZVNpbXBsZT5cbiAgICA8ZGl2ICpuZ0Zvcj1cImxldCByb3cgb2YgZGF0YVRvRGlzcGxheTsgbGV0IGkgPSBpbmRleFwiIGNsYXNzPVwicmVzcG9uc2l2ZV90YWJsZV9yb3dcIlxuICAgICAgICAgc3R5bGU9XCJoZWlnaHQ6e3tjb25maWcucm93SGVpZ2h0KydweCd9fVwiXG4gICAgICAgICBbY2xhc3Muc2VsZWN0ZWRdID0gXCJyb3dDbGlja0luZGV4ID09IGlcIj5cblxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgYXR0IG9mIGNvbHVtbnM7XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJyZXNwb25zaXZlX3RhYmxlX3Jvd19jZWxsXCJcbiAgICAgICAgICAgICAoY2xpY2spPVwidXBkYXRlT25DbGlja1Jvdyhyb3csIHJvd1thdHQua2V5XSwgaSlcIlxuICAgICAgICAgICAgIHN0eWxlPVwid2lkdGg6IHt7KGF0dFsnd2lkdGgnXSB8fCBhdHRbJ3N0eWxlJ10/Llsnd2lkdGgnXSkrJ3B4J319O1xuICAgICAgICAgICAgbWF4LXdpZHRoOiB7eyhhdHRbJ21heFdpZHRoJ10gfHwgYXR0WydzdHlsZSddPy5bJ21heFdpZHRoJ10pKydweCd9fTtcbiAgICAgICAgICAgIG1pbi13aWR0aDoge3soYXR0WydtaW5XaWR0aCddIHx8IGF0dFsnc3R5bGUnXT8uWydtaW5XaWR0aCddKSsncHgnfX1cIlxuICAgICAgICA+XG4gICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInJvd1thdHQua2V5XSAhPT0gdW5kZWZpbmVkOyB0aGVuIGZ1bGxDZWxsOyBlbHNlIGVtcHR5Q2VsbFRlbXBsYXRlT3V0bGV0XCI+PC9uZy1jb250YWluZXI+XG4gICAgICAgICAgPG5nLXRlbXBsYXRlICNmdWxsQ2VsbCBbbmdUZW1wbGF0ZU91dGxldF09XCJhdHQuY2VsbFRlbXBsYXRlXCIgIFtuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dF09XCJ7cm93OiByb3csIHZhbHVlOiByb3dbYXR0LmtleV19XCI+XG4gICAgICAgICAgICA8ZGl2ICpuZ0lmPVwiIWF0dC5jZWxsVGVtcGxhdGVcIj57e3Jvd1thdHQua2V5XX19PC9kaXY+XG4gICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICA8bmctdGVtcGxhdGUgI2VtcHR5Q2VsbFRlbXBsYXRlT3V0bGV0PlxuPCEtLSAgICAgICAgICAgIDxkaXYgW25nVGVtcGxhdGVPdXRsZXRdPVwiYXR0LmNlbGxUZW1wbGF0ZVwiPjwvZGl2Pi0tPlxuICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICA8L25nLWNvbnRhaW5lcj5cblxuICAgIDwvZGl2PlxuXG4gIDwvbmctdGVtcGxhdGU+XG5cbjwvZGl2PlxuIl19