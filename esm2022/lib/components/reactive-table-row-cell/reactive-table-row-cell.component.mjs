import { Component, EventEmitter, Input, Output } from '@angular/core';
import { moveItemInArray } from '@angular/cdk/drag-drop';
import * as i0 from "@angular/core";
import * as i1 from "../../services/rows.service";
import * as i2 from "@angular/common";
import * as i3 from "@angular/cdk/drag-drop";
export class ReactiveTableRowCellComponent {
    constructor(tableBody, rowService) {
        this.rowService = rowService;
        this.rowClickIndex = null;
        this.rowsExpanded = [];
        this.onClickRow = new EventEmitter();
        this.onChangePositionRows = new EventEmitter();
        this._tableBody = tableBody;
    }
    ngOnInit() {
        this.rowsObs = this.rowService.getChanges().subscribe((res) => this.rowsExpanded = res);
    }
    ngOnDestroy() {
        this.rowsObs?.unsubscribe();
    }
    updateOnClickRow(row, cell, index, key) {
        this.rowClickIndex = index;
        this.onClickRow?.emit({ row: row, item: cell, index: index, key: key });
    }
    ngOnChanges(changes) {
        if (changes?.['data'].currentValue) {
            this.dataToDisplay = [...changes?.['data'].currentValue];
        }
    }
    drop(event) {
        moveItemInArray(this.data, event.previousIndex, event.currentIndex);
        this.onChangePositionRows?.emit(this.data);
    }
    getRowHeight(row) {
        const styleRow = { 'flex-direction': 'column' };
        if (this.config.rowHeight) {
            Object.assign(styleRow, { height: this.config.rowHeight + 'px' });
        }
        if (this.config.rowMinHeight) {
            Object.assign(styleRow, { 'min-height': this.config.rowMinHeight + 'px' });
        }
        if (this.config.rowMaxHeight) {
            Object.assign(styleRow, { 'max-height': this.config.rowMaxHeight + 'px', overflow: 'hidden' });
        }
        if (this.getIsExpanded(row) && this.rowDetail) {
            Object.assign(styleRow, { height: this.rowDetail.rowDetailHeight + 'px' });
        }
        return styleRow;
    }
    getCellWidth(att) {
        const styleCell = {};
        if (att['width'] || att['style']?.['width']) {
            Object.assign(styleCell, { width: (att['width'] || att['style']?.['width']) + 'px' });
        }
        if (att['maxWidth'] || att['style']?.['maxWidth']) {
            Object.assign(styleCell, { 'max-width': (att['maxWidth'] || att['style']?.['maxWidth']) + 'px' });
        }
        if (att['minWidth'] || att['style']?.['minWidth']) {
            Object.assign(styleCell, { 'min-width': (att['minWidth'] || att['style']?.['minWidth']) + 'px' });
        }
        if (this.config.rowMaxHeight) {
            Object.assign(styleCell, { 'max-height': this.config.rowMaxHeight + 'px' }); // 'align-items': 'baseline'
        }
        return styleCell;
    }
    getIsExpanded(row) {
        return !!this.rowsExpanded.find((r) => JSON.stringify(row) === JSON.stringify(r));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ReactiveTableRowCellComponent, deps: [{ token: i0.ElementRef }, { token: i1.RowsService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: ReactiveTableRowCellComponent, selector: "app-reactive-table-row-cell", inputs: { data: "data", columns: "columns", config: "config", droggableRows: "droggableRows", rowDetail: "rowDetail" }, outputs: { onClickRow: "onClickRow", onChangePositionRows: "onChangePositionRows" }, usesOnChanges: true, ngImport: i0, template: "<div class=\"responsive_table_rows\">\n\n  <div class=\"responsive_table_header_loading\" *ngIf=\"config && dataToDisplay?.length === 0\">\n    {{config.messageTableNoData}}\n  </div>\n\n<!--  <div class=\"responsive_table_row\">-->\n<!--    <div *ngFor=\"let att of columns;\" class=\"responsive_table_row_cell\"-->\n<!--         style=\"width: {{(att['width'] || att['style']?.['width'])+'px'}};-->\n<!--            max-width: {{(att['maxWidth'] || att['style']?.['maxWidth'])+'px'}};-->\n<!--            min-width: {{(att['minWidth'] || att['style']?.['minWidth'])+'px'}}\">[xxx]</div>-->\n<!--  </div>-->\n\n  <ng-container *ngIf=\"droggableRows; then templateDroggrable; else templateSimple\"></ng-container>\n  <ng-template #templateDroggrable>\n    <div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\n      <div *ngFor=\"let row of dataToDisplay; let i = index\"\n           class=\"responsive_table_row example-box\"\n           cdkDragBoundary=\".responsive_table_rows\"\n           cdkDrag\n           style=\"{{getRowHeight(row)}}\"\n           [class.selected] = \"rowClickIndex == i\"\n      >\n        <div class=\"simple_row\">\n          <ng-container *ngFor=\"let att of columns;\">\n            <div class=\"responsive_table_row_cell\"\n                 (click)=\"updateOnClickRow(row, row[att.key], i, att.key)\"\n                 style=\"{{getCellWidth(att)}}\"\n            >\n              <ng-container *ngIf=\"row[att.key] !== undefined; then _fullCell\"></ng-container>\n              <ng-template #_fullCell\n                           [ngTemplateOutlet]=\"att.cellTemplate\"\n                           [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: row[att.key], column: att.key, rowIndex: i}\">\n                <div *ngIf=\"!att.cellTemplate\">{{row[att.key]}}</div>\n              </ng-template>\n            </div>\n          </ng-container>\n        </div>\n\n        <div *ngIf=\"rowDetail && rowDetail.template && getIsExpanded(row)\" class=\"detail_row\" style=\"height:{{rowDetail?.rowDetailHeight+'px'}}\">\n          <ng-container [ngTemplateOutlet]=\"rowDetail.template\"\n                        [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: null, column: null, rowIndex: i}\"></ng-container>\n        </div>\n\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #templateSimple>\n    <div *ngFor=\"let row of dataToDisplay; let i = index\"\n         class=\"responsive_table_row\"\n         style=\"{{getRowHeight(row)}}\"\n         [class.selected] = \"rowClickIndex == i\">\n\n      <div class=\"simple_row\">\n        <ng-container *ngFor=\"let att of columns;\">\n          <div class=\"responsive_table_row_cell\"\n               (click)=\"updateOnClickRow(row, row[att.key], i, att.key)\"\n               style=\"{{getCellWidth(att)}}\"\n          >\n            <ng-container *ngIf=\"row[att.key] !== undefined; then fullCell\"></ng-container>\n            <ng-template #fullCell\n                         [ngTemplateOutlet]=\"att.cellTemplate\"\n                         [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: row[att.key], column: att.key, rowIndex: i}\">\n              <div *ngIf=\"!att.cellTemplate\">{{row[att.key]}}</div>\n            </ng-template>\n          </div>\n        </ng-container>\n      </div>\n\n      <div *ngIf=\"rowDetail && rowDetail.template && getIsExpanded(row)\" class=\"detail_row\" style=\"height:{{rowDetail?.rowDetailHeight+'px'}}\">\n        <ng-container [ngTemplateOutlet]=\"rowDetail.template\"\n                      [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: null, column: null, rowIndex: i}\"></ng-container>\n      </div>\n\n    </div>\n\n  </ng-template>\n\n</div>\n", styles: [".flex_column,.responsive_table_rows,:host,.flex_column_min_width_height{display:flex;flex:1;flex-direction:column}.flex_row{display:flex;flex:1;flex-direction:row}.max_height_width{height:100%;width:100%;min-width:0;min-height:0}.flex_column_min_width_height{min-width:0;min-height:0}*{scrollbar-width:thin;scrollbar-color:#5287bd #DFE9EB}*::-webkit-scrollbar{height:10px;width:10px}*::-webkit-scrollbar-track{border-radius:3px;background-color:#d3d8da}*::-webkit-scrollbar-track:hover{background-color:#b8c0c2}*::-webkit-scrollbar-track:active{background-color:#b8c0c2}*::-webkit-scrollbar-thumb{border-radius:3px;background-color:#5287bd}*::-webkit-scrollbar-thumb:hover{background-color:#77a1cb}*::-webkit-scrollbar-thumb:active{background-color:#3d6e9f}:host{overflow-y:scroll;overflow-x:hidden}.responsive_table_rows .responsive_table_header_loading{display:flex;justify-content:center}.responsive_table_rows .responsive_table_row{display:flex;flex-direction:row;width:100%;border-bottom:1px solid #e9e9e9}.responsive_table_rows .responsive_table_row:nth-child(2n){background-color:#dee8f380}.responsive_table_rows .responsive_table_row:nth-child(odd){background-color:#f1f5fa80}.responsive_table_rows .responsive_table_row:hover{background-color:#c1d4e780;cursor:pointer}.responsive_table_rows .responsive_table_row.selected{background-color:#9cbad980}.responsive_table_rows .responsive_table_row .simple_row{flex-direction:row;display:flex;width:100%;height:100%}.responsive_table_rows .responsive_table_row .detail_row{box-shadow:inset 0 0 1px 1px #9cbad980;flex-direction:row;display:flex;width:100%}.responsive_table_rows .responsive_table_row .responsive_table_row_cell{display:flex;width:100%;min-width:100px;padding:2px;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center;font-size:14px}.responsive_table_rows .responsive_table_row .responsive_table_row_cell.hide{visibility:hidden}.responsive_table_rows .responsive_table_row .responsive_table_row_cell:last-child{border-right:none}.responsive_table_rows .example-list .example-box{cursor:move}.responsive_table_rows .cdk-drag-preview{background-color:red;box-sizing:border-box;height:50px;display:flex;width:100%;flex-direction:row;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.responsive_table_rows .cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder):nth-child(2n){background-color:#e2b38e}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder):nth-child(odd){background-color:#e8c0a2}::ng-deep .cdk-drag{background-color:#5287bd}::ng-deep .cdk-drag.responsive_table_row.cdk-drag-preview{background-color:#bc8ce8;display:flex;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center}::ng-deep .cdk-drag.responsive_table_row .responsive_table_row_cell{display:flex;width:100%;min-width:100px;padding:2px;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center}::ng-deep .cdk-drag.responsive_table_row .responsive_table_row_cell.hide{visibility:hidden}::ng-deep .cdk-drag.responsive_table_row .responsive_table_row_cell:last-child{border-right:none}\n"], dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i3.CdkDropList, selector: "[cdkDropList], cdk-drop-list", inputs: ["cdkDropListConnectedTo", "cdkDropListData", "cdkDropListOrientation", "id", "cdkDropListLockAxis", "cdkDropListDisabled", "cdkDropListSortingDisabled", "cdkDropListEnterPredicate", "cdkDropListSortPredicate", "cdkDropListAutoScrollDisabled", "cdkDropListAutoScrollStep"], outputs: ["cdkDropListDropped", "cdkDropListEntered", "cdkDropListExited", "cdkDropListSorted"], exportAs: ["cdkDropList"] }, { kind: "directive", type: i3.CdkDrag, selector: "[cdkDrag]", inputs: ["cdkDragData", "cdkDragLockAxis", "cdkDragRootElement", "cdkDragBoundary", "cdkDragStartDelay", "cdkDragFreeDragPosition", "cdkDragDisabled", "cdkDragConstrainPosition", "cdkDragPreviewClass", "cdkDragPreviewContainer"], outputs: ["cdkDragStarted", "cdkDragReleased", "cdkDragEnded", "cdkDragEntered", "cdkDragExited", "cdkDragDropped", "cdkDragMoved"], exportAs: ["cdkDrag"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ReactiveTableRowCellComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-reactive-table-row-cell', template: "<div class=\"responsive_table_rows\">\n\n  <div class=\"responsive_table_header_loading\" *ngIf=\"config && dataToDisplay?.length === 0\">\n    {{config.messageTableNoData}}\n  </div>\n\n<!--  <div class=\"responsive_table_row\">-->\n<!--    <div *ngFor=\"let att of columns;\" class=\"responsive_table_row_cell\"-->\n<!--         style=\"width: {{(att['width'] || att['style']?.['width'])+'px'}};-->\n<!--            max-width: {{(att['maxWidth'] || att['style']?.['maxWidth'])+'px'}};-->\n<!--            min-width: {{(att['minWidth'] || att['style']?.['minWidth'])+'px'}}\">[xxx]</div>-->\n<!--  </div>-->\n\n  <ng-container *ngIf=\"droggableRows; then templateDroggrable; else templateSimple\"></ng-container>\n  <ng-template #templateDroggrable>\n    <div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\n      <div *ngFor=\"let row of dataToDisplay; let i = index\"\n           class=\"responsive_table_row example-box\"\n           cdkDragBoundary=\".responsive_table_rows\"\n           cdkDrag\n           style=\"{{getRowHeight(row)}}\"\n           [class.selected] = \"rowClickIndex == i\"\n      >\n        <div class=\"simple_row\">\n          <ng-container *ngFor=\"let att of columns;\">\n            <div class=\"responsive_table_row_cell\"\n                 (click)=\"updateOnClickRow(row, row[att.key], i, att.key)\"\n                 style=\"{{getCellWidth(att)}}\"\n            >\n              <ng-container *ngIf=\"row[att.key] !== undefined; then _fullCell\"></ng-container>\n              <ng-template #_fullCell\n                           [ngTemplateOutlet]=\"att.cellTemplate\"\n                           [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: row[att.key], column: att.key, rowIndex: i}\">\n                <div *ngIf=\"!att.cellTemplate\">{{row[att.key]}}</div>\n              </ng-template>\n            </div>\n          </ng-container>\n        </div>\n\n        <div *ngIf=\"rowDetail && rowDetail.template && getIsExpanded(row)\" class=\"detail_row\" style=\"height:{{rowDetail?.rowDetailHeight+'px'}}\">\n          <ng-container [ngTemplateOutlet]=\"rowDetail.template\"\n                        [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: null, column: null, rowIndex: i}\"></ng-container>\n        </div>\n\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #templateSimple>\n    <div *ngFor=\"let row of dataToDisplay; let i = index\"\n         class=\"responsive_table_row\"\n         style=\"{{getRowHeight(row)}}\"\n         [class.selected] = \"rowClickIndex == i\">\n\n      <div class=\"simple_row\">\n        <ng-container *ngFor=\"let att of columns;\">\n          <div class=\"responsive_table_row_cell\"\n               (click)=\"updateOnClickRow(row, row[att.key], i, att.key)\"\n               style=\"{{getCellWidth(att)}}\"\n          >\n            <ng-container *ngIf=\"row[att.key] !== undefined; then fullCell\"></ng-container>\n            <ng-template #fullCell\n                         [ngTemplateOutlet]=\"att.cellTemplate\"\n                         [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: row[att.key], column: att.key, rowIndex: i}\">\n              <div *ngIf=\"!att.cellTemplate\">{{row[att.key]}}</div>\n            </ng-template>\n          </div>\n        </ng-container>\n      </div>\n\n      <div *ngIf=\"rowDetail && rowDetail.template && getIsExpanded(row)\" class=\"detail_row\" style=\"height:{{rowDetail?.rowDetailHeight+'px'}}\">\n        <ng-container [ngTemplateOutlet]=\"rowDetail.template\"\n                      [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: null, column: null, rowIndex: i}\"></ng-container>\n      </div>\n\n    </div>\n\n  </ng-template>\n\n</div>\n", styles: [".flex_column,.responsive_table_rows,:host,.flex_column_min_width_height{display:flex;flex:1;flex-direction:column}.flex_row{display:flex;flex:1;flex-direction:row}.max_height_width{height:100%;width:100%;min-width:0;min-height:0}.flex_column_min_width_height{min-width:0;min-height:0}*{scrollbar-width:thin;scrollbar-color:#5287bd #DFE9EB}*::-webkit-scrollbar{height:10px;width:10px}*::-webkit-scrollbar-track{border-radius:3px;background-color:#d3d8da}*::-webkit-scrollbar-track:hover{background-color:#b8c0c2}*::-webkit-scrollbar-track:active{background-color:#b8c0c2}*::-webkit-scrollbar-thumb{border-radius:3px;background-color:#5287bd}*::-webkit-scrollbar-thumb:hover{background-color:#77a1cb}*::-webkit-scrollbar-thumb:active{background-color:#3d6e9f}:host{overflow-y:scroll;overflow-x:hidden}.responsive_table_rows .responsive_table_header_loading{display:flex;justify-content:center}.responsive_table_rows .responsive_table_row{display:flex;flex-direction:row;width:100%;border-bottom:1px solid #e9e9e9}.responsive_table_rows .responsive_table_row:nth-child(2n){background-color:#dee8f380}.responsive_table_rows .responsive_table_row:nth-child(odd){background-color:#f1f5fa80}.responsive_table_rows .responsive_table_row:hover{background-color:#c1d4e780;cursor:pointer}.responsive_table_rows .responsive_table_row.selected{background-color:#9cbad980}.responsive_table_rows .responsive_table_row .simple_row{flex-direction:row;display:flex;width:100%;height:100%}.responsive_table_rows .responsive_table_row .detail_row{box-shadow:inset 0 0 1px 1px #9cbad980;flex-direction:row;display:flex;width:100%}.responsive_table_rows .responsive_table_row .responsive_table_row_cell{display:flex;width:100%;min-width:100px;padding:2px;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center;font-size:14px}.responsive_table_rows .responsive_table_row .responsive_table_row_cell.hide{visibility:hidden}.responsive_table_rows .responsive_table_row .responsive_table_row_cell:last-child{border-right:none}.responsive_table_rows .example-list .example-box{cursor:move}.responsive_table_rows .cdk-drag-preview{background-color:red;box-sizing:border-box;height:50px;display:flex;width:100%;flex-direction:row;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.responsive_table_rows .cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder):nth-child(2n){background-color:#e2b38e}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder):nth-child(odd){background-color:#e8c0a2}::ng-deep .cdk-drag{background-color:#5287bd}::ng-deep .cdk-drag.responsive_table_row.cdk-drag-preview{background-color:#bc8ce8;display:flex;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center}::ng-deep .cdk-drag.responsive_table_row .responsive_table_row_cell{display:flex;width:100%;min-width:100px;padding:2px;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center}::ng-deep .cdk-drag.responsive_table_row .responsive_table_row_cell.hide{visibility:hidden}::ng-deep .cdk-drag.responsive_table_row .responsive_table_row_cell:last-child{border-right:none}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.RowsService }]; }, propDecorators: { data: [{
                type: Input
            }], columns: [{
                type: Input
            }], config: [{
                type: Input
            }], droggableRows: [{
                type: Input
            }], rowDetail: [{
                type: Input
            }], onClickRow: [{
                type: Output
            }], onChangePositionRows: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhY3RpdmUtdGFibGUtcm93LWNlbGwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdGFibGUtcmVzcG9uc2l2ZS9zcmMvbGliL2NvbXBvbmVudHMvcmVhY3RpdmUtdGFibGUtcm93LWNlbGwvcmVhY3RpdmUtdGFibGUtcm93LWNlbGwuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdGFibGUtcmVzcG9uc2l2ZS9zcmMvbGliL2NvbXBvbmVudHMvcmVhY3RpdmUtdGFibGUtcm93LWNlbGwvcmVhY3RpdmUtdGFibGUtcm93LWNlbGwuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsRUFFVCxZQUFZLEVBQ1osS0FBSyxFQUdMLE1BQU0sRUFFUCxNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQWMsZUFBZSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7Ozs7O0FBVXBFLE1BQU0sT0FBTyw2QkFBNkI7SUFrQnhDLFlBQVksU0FBcUIsRUFBVSxVQUF1QjtRQUF2QixlQUFVLEdBQVYsVUFBVSxDQUFhO1FBaEJsRSxrQkFBYSxHQUFZLElBQVcsQ0FBQztRQUNyQyxpQkFBWSxHQUFrQyxFQUFFLENBQUM7UUFTdkMsZUFBVSxHQUFHLElBQUksWUFBWSxFQUFxRCxDQUFDO1FBQ25GLHlCQUFvQixHQUFHLElBQUksWUFBWSxFQUF5QyxDQUFDO1FBTXpGLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO0lBQzlCLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFlBQVksR0FBRyxHQUFHLENBQUMsQ0FBQztJQUMxRixDQUFDO0lBQ0QsV0FBVztR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Z0JBRUksVUFBVTtzQkFBbkIsTUFBTTtnQkFDRyxvQkFBb0I7c0JBQTdCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE9uQ2hhbmdlcywgT25EZXN0cm95LFxuICBPbkluaXQsXG4gIE91dHB1dCxcbiAgU2ltcGxlQ2hhbmdlc1xufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7SVJlc3BvbnNpdmVUYWJsZUNvbmZpZ30gZnJvbSBcIi4uL3RhYmxlLXJlc3BvbnNpdmUtaW50ZXJmYWNlXCI7XG5pbXBvcnQge0Nka0RyYWdEcm9wLCBtb3ZlSXRlbUluQXJyYXl9IGZyb20gJ0Bhbmd1bGFyL2Nkay9kcmFnLWRyb3AnO1xuaW1wb3J0IHtEYXRhdGFibGVSb3dEZXRhaWxEaXJlY3RpdmV9IGZyb20gXCIuLi8uLi9kaXJlY3RpdmUvcm93LWRldGFpbC9yb3ctZGV0YWlsLmRpcmVjdGl2ZVwiO1xuaW1wb3J0IHtSb3dzU2VydmljZX0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL3Jvd3Muc2VydmljZVwiO1xuaW1wb3J0IHtPYnNlcnZhYmxlLCBTdWJzY3JpcHRpb259IGZyb20gXCJyeGpzXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FwcC1yZWFjdGl2ZS10YWJsZS1yb3ctY2VsbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9yZWFjdGl2ZS10YWJsZS1yb3ctY2VsbC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3JlYWN0aXZlLXRhYmxlLXJvdy1jZWxsLmNvbXBvbmVudC5zY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIFJlYWN0aXZlVGFibGVSb3dDZWxsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG5cbiAgcm93Q2xpY2tJbmRleDogIG51bWJlciA9IG51bGwgYXMgYW55O1xuICByb3dzRXhwYW5kZWQ6ICAgQXJyYXk8e1trZXk6IHN0cmluZ106IGFueX0+ID0gW107XG4gIHJvd3NPYnMhOiAgICAgICBTdWJzY3JpcHRpb247XG5cbiAgQElucHV0KCkgZGF0YSE6ICAgICBBcnJheTx7W2tleTogc3RyaW5nXTogc3RyaW5nfG51bWJlcn0+O1xuICBASW5wdXQoKSBjb2x1bW5zITogIEFycmF5PGFueT47XG4gIEBJbnB1dCgpIGNvbmZpZyE6ICAgSVJlc3BvbnNpdmVUYWJsZUNvbmZpZztcbiAgQElucHV0KCkgZHJvZ2dhYmxlUm93cyE6IGJvb2xlYW47XG4gIEBJbnB1dCgpIHJvd0RldGFpbCE6IERhdGF0YWJsZVJvd0RldGFpbERpcmVjdGl2ZTtcblxuICBAT3V0cHV0KCkgb25DbGlja1JvdyA9IG5ldyBFdmVudEVtaXR0ZXI8e3JvdzogYW55OyBpdGVtOiBhbnk7IGluZGV4OiBudW1iZXI7IGtleTogc3RyaW5nfT4oKTtcbiAgQE91dHB1dCgpIG9uQ2hhbmdlUG9zaXRpb25Sb3dzID0gbmV3IEV2ZW50RW1pdHRlcjxBcnJheTx7W2tleTogc3RyaW5nXTogc3RyaW5nfG51bWJlcn0+PigpO1xuXG4gIF90YWJsZUJvZHkhOiBFbGVtZW50UmVmO1xuICBkYXRhVG9EaXNwbGF5ITogQXJyYXk8e1trZXk6IHN0cmluZ106IGFueX0+O1xuXG4gIGNvbnN0cnVjdG9yKHRhYmxlQm9keTogRWxlbWVudFJlZiwgcHJpdmF0ZSByb3dTZXJ2aWNlOiBSb3dzU2VydmljZSkge1xuICAgIHRoaXMuX3RhYmxlQm9keSA9IHRhYmxlQm9keTtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMucm93c09icyA9IHRoaXMucm93U2VydmljZS5nZXRDaGFuZ2VzKCkuc3Vic2NyaWJlKChyZXMpID0+IHRoaXMucm93c0V4cGFuZGVkID0gcmVzKTtcbiAgfVxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLnJvd3NPYnM/LnVuc3Vic2NyaWJlKCk7XG4gIH1cblxuICB1cGRhdGVPbkNsaWNrUm93KHJvdzoge1trZXk6IHN0cmluZ106IGFueX0sIGNlbGw6IHtba2V5OiBzdHJpbmddOiBhbnl9LCBpbmRleDogbnVtYmVyLCBrZXk6IHN0cmluZykge1xuICAgIHRoaXMucm93Q2xpY2tJbmRleCA9IGluZGV4O1xuICAgIHRoaXMub25DbGlja1Jvdz8uZW1pdCh7cm93OiByb3csIGl0ZW06IGNlbGwsIGluZGV4OiBpbmRleCwga2V5OiBrZXl9KTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBpZiAoY2hhbmdlcz8uWydkYXRhJ10uY3VycmVudFZhbHVlKSB7XG4gICAgICB0aGlzLmRhdGFUb0Rpc3BsYXkgPSBbLi4uY2hhbmdlcz8uWydkYXRhJ10uY3VycmVudFZhbHVlXTtcbiAgICB9XG4gIH1cbiAgZHJvcChldmVudDogQ2RrRHJhZ0Ryb3A8c3RyaW5nW10+KSB7XG4gICAgbW92ZUl0ZW1JbkFycmF5KHRoaXMuZGF0YSwgZXZlbnQucHJldmlvdXNJbmRleCwgZXZlbnQuY3VycmVudEluZGV4KTtcbiAgICB0aGlzLm9uQ2hhbmdlUG9zaXRpb25Sb3dzPy5lbWl0KHRoaXMuZGF0YSk7XG4gIH1cblxuICBnZXRSb3dIZWlnaHQocm93OiB7W2tleTogc3RyaW5nXTogYW55fSk6IGFueSB7XG4gICAgY29uc3Qgc3R5bGVSb3cgPSB7J2ZsZXgtZGlyZWN0aW9uJzogJ2NvbHVtbid9O1xuICAgIGlmICh0aGlzLmNvbmZpZy5yb3dIZWlnaHQpIHtcbiAgICAgIE9iamVjdC5hc3NpZ24oc3R5bGVSb3csIHtoZWlnaHQ6IHRoaXMuY29uZmlnLnJvd0hlaWdodCArICdweCd9KTtcbiAgICB9XG4gICAgaWYgKHRoaXMuY29uZmlnLnJvd01pbkhlaWdodCkge1xuICAgICAgT2JqZWN0LmFzc2lnbihzdHlsZVJvdywgeydtaW4taGVpZ2h0JzogdGhpcy5jb25maWcucm93TWluSGVpZ2h0ICsgJ3B4J30pO1xuICAgIH1cbiAgICBpZiAodGhpcy5jb25maWcucm93TWF4SGVpZ2h0KSB7XG4gICAgICBPYmplY3QuYXNzaWduKHN0eWxlUm93LCB7J21heC1oZWlnaHQnOiB0aGlzLmNvbmZpZy5yb3dNYXhIZWlnaHQgKyAncHgnLCBvdmVyZmxvdzogJ2hpZGRlbid9KTtcbiAgICB9XG4gICAgaWYgKHRoaXMuZ2V0SXNFeHBhbmRlZChyb3cpICYmIHRoaXMucm93RGV0YWlsKSB7XG4gICAgICBPYmplY3QuYXNzaWduKHN0eWxlUm93LCB7aGVpZ2h0OiB0aGlzLnJvd0RldGFpbC5yb3dEZXRhaWxIZWlnaHQgKyAncHgnfSk7XG4gICAgfVxuICAgIHJldHVybiBzdHlsZVJvdztcbiAgfVxuXG4gIGdldENlbGxXaWR0aChhdHQ6IHtba2V5OiBzdHJpbmddOiBhbnl9KTogYW55IHtcbiAgICBjb25zdCBzdHlsZUNlbGwgPSB7fTtcbiAgICBpZiAoYXR0Wyd3aWR0aCddIHx8IGF0dFsnc3R5bGUnXT8uWyd3aWR0aCddKSB7XG4gICAgICBPYmplY3QuYXNzaWduKHN0eWxlQ2VsbCwge3dpZHRoOiAoYXR0Wyd3aWR0aCddIHx8IGF0dFsnc3R5bGUnXT8uWyd3aWR0aCddKSArICdweCd9KTtcbiAgICB9XG4gICAgaWYgKGF0dFsnbWF4V2lkdGgnXSB8fCBhdHRbJ3N0eWxlJ10/LlsnbWF4V2lkdGgnXSkge1xuICAgICAgT2JqZWN0LmFzc2lnbihzdHlsZUNlbGwsIHsnbWF4LXdpZHRoJzogKGF0dFsnbWF4V2lkdGgnXSB8fCBhdHRbJ3N0eWxlJ10/LlsnbWF4V2lkdGgnXSkgKyAncHgnfSk7XG4gICAgfVxuICAgIGlmIChhdHRbJ21pbldpZHRoJ10gfHwgYXR0WydzdHlsZSddPy5bJ21pbldpZHRoJ10pIHtcbiAgICAgIE9iamVjdC5hc3NpZ24oc3R5bGVDZWxsLCB7J21pbi13aWR0aCc6IChhdHRbJ21pbldpZHRoJ10gfHwgYXR0WydzdHlsZSddPy5bJ21pbldpZHRoJ10pICsgJ3B4J30pO1xuICAgIH1cbiAgICBpZiAodGhpcy5jb25maWcucm93TWF4SGVpZ2h0KSB7XG4gICAgICBPYmplY3QuYXNzaWduKHN0eWxlQ2VsbCwgeydtYXgtaGVpZ2h0JzogdGhpcy5jb25maWcucm93TWF4SGVpZ2h0ICsgJ3B4J30pOyAvLyAnYWxpZ24taXRlbXMnOiAnYmFzZWxpbmUnXG4gICAgfVxuICAgIHJldHVybiBzdHlsZUNlbGw7XG4gIH1cblxuICBnZXRJc0V4cGFuZGVkKHJvdzoge1trZXk6IHN0cmluZ106IGFueX0pOiBib29sZWFuIHtcbiAgICByZXR1cm4gISF0aGlzLnJvd3NFeHBhbmRlZC5maW5kKChyKSA9PiBKU09OLnN0cmluZ2lmeShyb3cpID09PSBKU09OLnN0cmluZ2lmeShyKSk7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJyZXNwb25zaXZlX3RhYmxlX3Jvd3NcIj5cblxuICA8ZGl2IGNsYXNzPVwicmVzcG9uc2l2ZV90YWJsZV9oZWFkZXJfbG9hZGluZ1wiICpuZ0lmPVwiY29uZmlnICYmIGRhdGFUb0Rpc3BsYXk/Lmxlbmd0aCA9PT0gMFwiPlxuICAgIHt7Y29uZmlnLm1lc3NhZ2VUYWJsZU5vRGF0YX19XG4gIDwvZGl2PlxuXG48IS0tICA8ZGl2IGNsYXNzPVwicmVzcG9uc2l2ZV90YWJsZV9yb3dcIj4tLT5cbjwhLS0gICAgPGRpdiAqbmdGb3I9XCJsZXQgYXR0IG9mIGNvbHVtbnM7XCIgY2xhc3M9XCJyZXNwb25zaXZlX3RhYmxlX3Jvd19jZWxsXCItLT5cbjwhLS0gICAgICAgICBzdHlsZT1cIndpZHRoOiB7eyhhdHRbJ3dpZHRoJ10gfHwgYXR0WydzdHlsZSddPy5bJ3dpZHRoJ10pKydweCd9fTstLT5cbjwhLS0gICAgICAgICAgICBtYXgtd2lkdGg6IHt7KGF0dFsnbWF4V2lkdGgnXSB8fCBhdHRbJ3N0eWxlJ10/LlsnbWF4V2lkdGgnXSkrJ3B4J319Oy0tPlxuPCEtLSAgICAgICAgICAgIG1pbi13aWR0aDoge3soYXR0WydtaW5XaWR0aCddIHx8IGF0dFsnc3R5bGUnXT8uWydtaW5XaWR0aCddKSsncHgnfX1cIj5beHh4XTwvZGl2Pi0tPlxuPCEtLSAgPC9kaXY+LS0+XG5cbiAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImRyb2dnYWJsZVJvd3M7IHRoZW4gdGVtcGxhdGVEcm9nZ3JhYmxlOyBlbHNlIHRlbXBsYXRlU2ltcGxlXCI+PC9uZy1jb250YWluZXI+XG4gIDxuZy10ZW1wbGF0ZSAjdGVtcGxhdGVEcm9nZ3JhYmxlPlxuICAgIDxkaXYgY2RrRHJvcExpc3QgY2xhc3M9XCJleGFtcGxlLWxpc3RcIiAoY2RrRHJvcExpc3REcm9wcGVkKT1cImRyb3AoJGV2ZW50KVwiPlxuICAgICAgPGRpdiAqbmdGb3I9XCJsZXQgcm93IG9mIGRhdGFUb0Rpc3BsYXk7IGxldCBpID0gaW5kZXhcIlxuICAgICAgICAgICBjbGFzcz1cInJlc3BvbnNpdmVfdGFibGVfcm93IGV4YW1wbGUtYm94XCJcbiAgICAgICAgICAgY2RrRHJhZ0JvdW5kYXJ5PVwiLnJlc3BvbnNpdmVfdGFibGVfcm93c1wiXG4gICAgICAgICAgIGNka0RyYWdcbiAgICAgICAgICAgc3R5bGU9XCJ7e2dldFJvd0hlaWdodChyb3cpfX1cIlxuICAgICAgICAgICBbY2xhc3Muc2VsZWN0ZWRdID0gXCJyb3dDbGlja0luZGV4ID09IGlcIlxuICAgICAgPlxuICAgICAgICA8ZGl2IGNsYXNzPVwic2ltcGxlX3Jvd1wiPlxuICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IGF0dCBvZiBjb2x1bW5zO1wiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJlc3BvbnNpdmVfdGFibGVfcm93X2NlbGxcIlxuICAgICAgICAgICAgICAgICAoY2xpY2spPVwidXBkYXRlT25DbGlja1Jvdyhyb3csIHJvd1thdHQua2V5XSwgaSwgYXR0LmtleSlcIlxuICAgICAgICAgICAgICAgICBzdHlsZT1cInt7Z2V0Q2VsbFdpZHRoKGF0dCl9fVwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJyb3dbYXR0LmtleV0gIT09IHVuZGVmaW5lZDsgdGhlbiBfZnVsbENlbGxcIj48L25nLWNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgPG5nLXRlbXBsYXRlICNfZnVsbENlbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cImF0dC5jZWxsVGVtcGxhdGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cIntyb3c6IHJvdywgZXhwYW5kZWQ6IGdldElzRXhwYW5kZWQocm93KSwgdmFsdWU6IHJvd1thdHQua2V5XSwgY29sdW1uOiBhdHQua2V5LCByb3dJbmRleDogaX1cIj5cbiAgICAgICAgICAgICAgICA8ZGl2ICpuZ0lmPVwiIWF0dC5jZWxsVGVtcGxhdGVcIj57e3Jvd1thdHQua2V5XX19PC9kaXY+XG4gICAgICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGRpdiAqbmdJZj1cInJvd0RldGFpbCAmJiByb3dEZXRhaWwudGVtcGxhdGUgJiYgZ2V0SXNFeHBhbmRlZChyb3cpXCIgY2xhc3M9XCJkZXRhaWxfcm93XCIgc3R5bGU9XCJoZWlnaHQ6e3tyb3dEZXRhaWw/LnJvd0RldGFpbEhlaWdodCsncHgnfX1cIj5cbiAgICAgICAgICA8bmctY29udGFpbmVyIFtuZ1RlbXBsYXRlT3V0bGV0XT1cInJvd0RldGFpbC50ZW1wbGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBbbmdUZW1wbGF0ZU91dGxldENvbnRleHRdPVwie3Jvdzogcm93LCBleHBhbmRlZDogZ2V0SXNFeHBhbmRlZChyb3cpLCB2YWx1ZTogbnVsbCwgY29sdW1uOiBudWxsLCByb3dJbmRleDogaX1cIj48L25nLWNvbnRhaW5lcj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L25nLXRlbXBsYXRlPlxuXG4gIDxuZy10ZW1wbGF0ZSAjdGVtcGxhdGVTaW1wbGU+XG4gICAgPGRpdiAqbmdGb3I9XCJsZXQgcm93IG9mIGRhdGFUb0Rpc3BsYXk7IGxldCBpID0gaW5kZXhcIlxuICAgICAgICAgY2xhc3M9XCJyZXNwb25zaXZlX3RhYmxlX3Jvd1wiXG4gICAgICAgICBzdHlsZT1cInt7Z2V0Um93SGVpZ2h0KHJvdyl9fVwiXG4gICAgICAgICBbY2xhc3Muc2VsZWN0ZWRdID0gXCJyb3dDbGlja0luZGV4ID09IGlcIj5cblxuICAgICAgPGRpdiBjbGFzcz1cInNpbXBsZV9yb3dcIj5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgYXR0IG9mIGNvbHVtbnM7XCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInJlc3BvbnNpdmVfdGFibGVfcm93X2NlbGxcIlxuICAgICAgICAgICAgICAgKGNsaWNrKT1cInVwZGF0ZU9uQ2xpY2tSb3cocm93LCByb3dbYXR0LmtleV0sIGksIGF0dC5rZXkpXCJcbiAgICAgICAgICAgICAgIHN0eWxlPVwie3tnZXRDZWxsV2lkdGgoYXR0KX19XCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwicm93W2F0dC5rZXldICE9PSB1bmRlZmluZWQ7IHRoZW4gZnVsbENlbGxcIj48L25nLWNvbnRhaW5lcj5cbiAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSAjZnVsbENlbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICBbbmdUZW1wbGF0ZU91dGxldF09XCJhdHQuY2VsbFRlbXBsYXRlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICBbbmdUZW1wbGF0ZU91dGxldENvbnRleHRdPVwie3Jvdzogcm93LCBleHBhbmRlZDogZ2V0SXNFeHBhbmRlZChyb3cpLCB2YWx1ZTogcm93W2F0dC5rZXldLCBjb2x1bW46IGF0dC5rZXksIHJvd0luZGV4OiBpfVwiPlxuICAgICAgICAgICAgICA8ZGl2ICpuZ0lmPVwiIWF0dC5jZWxsVGVtcGxhdGVcIj57e3Jvd1thdHQua2V5XX19PC9kaXY+XG4gICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2ICpuZ0lmPVwicm93RGV0YWlsICYmIHJvd0RldGFpbC50ZW1wbGF0ZSAmJiBnZXRJc0V4cGFuZGVkKHJvdylcIiBjbGFzcz1cImRldGFpbF9yb3dcIiBzdHlsZT1cImhlaWdodDp7e3Jvd0RldGFpbD8ucm93RGV0YWlsSGVpZ2h0KydweCd9fVwiPlxuICAgICAgICA8bmctY29udGFpbmVyIFtuZ1RlbXBsYXRlT3V0bGV0XT1cInJvd0RldGFpbC50ZW1wbGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cIntyb3c6IHJvdywgZXhwYW5kZWQ6IGdldElzRXhwYW5kZWQocm93KSwgdmFsdWU6IG51bGwsIGNvbHVtbjogbnVsbCwgcm93SW5kZXg6IGl9XCI+PC9uZy1jb250YWluZXI+XG4gICAgICA8L2Rpdj5cblxuICAgIDwvZGl2PlxuXG4gIDwvbmctdGVtcGxhdGU+XG5cbjwvZGl2PlxuIl19