import { Component, EventEmitter, Input, Output } from '@angular/core';
import { moveItemInArray } from '@angular/cdk/drag-drop';
import * as i0 from "@angular/core";
import * as i1 from "../../services/rows.service";
import * as i2 from "@angular/common";
import * as i3 from "@angular/cdk/drag-drop";
export class ReactiveTableRowCellComponent {
    constructor(tableBody, rowService) {
        this.rowService = rowService;
        this.rowClickIndex = null;
        this.rowsExpanded = [];
        this.onClickRow = new EventEmitter();
        this.onChangePositionRows = new EventEmitter();
        this._tableBody = tableBody;
    }
    ngOnInit() {
        this.rowsObs = this.rowService.getChanges().subscribe((res) => this.rowsExpanded = res);
    }
    ngOnDestroy() {
        this.rowsObs?.unsubscribe();
    }
    updateOnClickRow(row, cell, index, key) {
        this.rowClickIndex = index;
        this.onClickRow?.emit({ row: row, item: cell, index: index, key: key });
    }
    ngOnChanges(changes) {
        if (changes?.['data'].currentValue) {
            this.dataToDisplay = [...changes?.['data'].currentValue];
        }
    }
    drop(event) {
        moveItemInArray(this.data, event.previousIndex, event.currentIndex);
        this.onChangePositionRows?.emit(this.data);
    }
    getRowHeight(row) {
        const styleRow = { 'flex-direction': 'column' };
        if (this.config.rowHeight) {
            Object.assign(styleRow, { height: this.config.rowHeight + 'px' });
        }
        if (this.config.rowMinHeight) {
            Object.assign(styleRow, { 'min-height': this.config.rowMinHeight + 'px' });
        }
        if (this.config.rowMaxHeight) {
            Object.assign(styleRow, { 'max-height': this.config.rowMaxHeight + 'px', overflow: 'hidden' });
        }
        if (this.getIsExpanded(row) && this.rowDetail) {
            Object.assign(styleRow, { height: this.rowDetail.rowDetailHeight + 'px' });
        }
        return styleRow;
    }
    getCellWidth(att) {
        const styleCell = {};
        if (att['width'] || att['style']?.['width']) {
            Object.assign(styleCell, { width: (att['width'] || att['style']?.['width']) + 'px' });
        }
        if (att['maxWidth'] || att['style']?.['maxWidth']) {
            Object.assign(styleCell, { 'max-width': (att['maxWidth'] || att['style']?.['maxWidth']) + 'px' });
        }
        if (att['minWidth'] || att['style']?.['minWidth']) {
            Object.assign(styleCell, { 'min-width': (att['minWidth'] || att['style']?.['minWidth']) + 'px' });
        }
        if (this.config.rowMaxHeight) {
            Object.assign(styleCell, { 'max-height': this.config.rowMaxHeight + 'px' }); // 'align-items': 'baseline'
        }
        return styleCell;
    }
    getIsExpanded(row) {
        return !!this.rowsExpanded.find((r) => JSON.stringify(row) === JSON.stringify(r));
    }
    stopOnMoved(event) {
        debugger;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ReactiveTableRowCellComponent, deps: [{ token: i0.ElementRef }, { token: i1.RowsService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: ReactiveTableRowCellComponent, selector: "app-reactive-table-row-cell", inputs: { data: "data", columns: "columns", config: "config", droggableRows: "droggableRows", rowDetail: "rowDetail" }, outputs: { onClickRow: "onClickRow", onChangePositionRows: "onChangePositionRows" }, usesOnChanges: true, ngImport: i0, template: "<div class=\"responsive_table_rows\">\n\n  <div class=\"responsive_table_header_loading\" *ngIf=\"config && dataToDisplay?.length === 0\">\n    {{config.messageTableNoData}}\n  </div>\n\n<!--  <div class=\"responsive_table_row\">-->\n<!--    <div *ngFor=\"let att of columns;\" class=\"responsive_table_row_cell\"-->\n<!--         style=\"width: {{(att['width'] || att['style']?.['width'])+'px'}};-->\n<!--            max-width: {{(att['maxWidth'] || att['style']?.['maxWidth'])+'px'}};-->\n<!--            min-width: {{(att['minWidth'] || att['style']?.['minWidth'])+'px'}}\">[xxx]</div>-->\n<!--  </div>-->\n\n  <ng-container *ngIf=\"droggableRows; then templateDroggrable; else templateSimple\"></ng-container>\n  <ng-template #templateDroggrable>\n    <div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\n      <div *ngFor=\"let row of dataToDisplay; let i = index\"\n           class=\"responsive_table_row example-box\"\n           cdkDragBoundary=\"responsive_table_rows\"\n           cdkDrag\n           style=\"{{getRowHeight(row)}}\"\n           (cdkDragMoved)=\"stopOnMoved($event)\"\n           [class.selected] = \"rowClickIndex == i\"\n      >\n        <div class=\"simple_row\">\n          <ng-container *ngFor=\"let att of columns;\">\n            <div class=\"responsive_table_row_cell\"\n                 (click)=\"updateOnClickRow(row, row[att.key], i, att.key)\"\n                 style=\"{{getCellWidth(att)}}\"\n            >\n              <ng-container *ngIf=\"row[att.key] !== undefined; then _fullCell\"></ng-container>\n              <ng-template #_fullCell\n                           [ngTemplateOutlet]=\"att.cellTemplate\"\n                           [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: row[att.key], column: att.key, rowIndex: i}\">\n                <div *ngIf=\"!att.cellTemplate\">{{row[att.key]}}</div>\n              </ng-template>\n            </div>\n          </ng-container>\n        </div>\n\n        <div *ngIf=\"rowDetail && rowDetail.template && getIsExpanded(row)\" class=\"detail_row\" style=\"height:{{rowDetail?.rowDetailHeight+'px'}}\">\n          <ng-container [ngTemplateOutlet]=\"rowDetail.template\"\n                        [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: null, column: null, rowIndex: i}\"></ng-container>\n        </div>\n\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #templateSimple>\n    <div *ngFor=\"let row of dataToDisplay; let i = index\"\n         class=\"responsive_table_row\"\n         style=\"{{getRowHeight(row)}}\"\n         [class.selected] = \"rowClickIndex == i\">\n\n      <div class=\"simple_row\">\n        <ng-container *ngFor=\"let att of columns;\">\n          <div class=\"responsive_table_row_cell\"\n               (click)=\"updateOnClickRow(row, row[att.key], i, att.key)\"\n               style=\"{{getCellWidth(att)}}\"\n          >\n            <ng-container *ngIf=\"row[att.key] !== undefined; then fullCell\"></ng-container>\n            <ng-template #fullCell\n                         [ngTemplateOutlet]=\"att.cellTemplate\"\n                         [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: row[att.key], column: att.key, rowIndex: i}\">\n              <div *ngIf=\"!att.cellTemplate\">{{row[att.key]}}</div>\n            </ng-template>\n          </div>\n        </ng-container>\n      </div>\n\n      <div *ngIf=\"rowDetail && rowDetail.template && getIsExpanded(row)\" class=\"detail_row\" style=\"height:{{rowDetail?.rowDetailHeight+'px'}}\">\n        <ng-container [ngTemplateOutlet]=\"rowDetail.template\"\n                      [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: null, column: null, rowIndex: i}\"></ng-container>\n      </div>\n\n    </div>\n\n  </ng-template>\n\n</div>\n", styles: [".flex_column,.responsive_table_rows,:host,.flex_column_min_width_height{display:flex;flex:1;flex-direction:column}.flex_row{display:flex;flex:1;flex-direction:row}.max_height_width{height:100%;width:100%;min-width:0;min-height:0}.flex_column_min_width_height{min-width:0;min-height:0}*{scrollbar-width:thin;scrollbar-color:#5287bd #DFE9EB}*::-webkit-scrollbar{height:10px;width:10px}*::-webkit-scrollbar-track{border-radius:3px;background-color:#d3d8da}*::-webkit-scrollbar-track:hover{background-color:#b8c0c2}*::-webkit-scrollbar-track:active{background-color:#b8c0c2}*::-webkit-scrollbar-thumb{border-radius:3px;background-color:#5287bd}*::-webkit-scrollbar-thumb:hover{background-color:#77a1cb}*::-webkit-scrollbar-thumb:active{background-color:#3d6e9f}:host{overflow-y:scroll;overflow-x:hidden}.responsive_table_rows .responsive_table_header_loading{display:flex;justify-content:center}.responsive_table_rows .responsive_table_row{display:flex;flex-direction:row;width:100%;border-bottom:1px solid #e9e9e9}.responsive_table_rows .responsive_table_row:nth-child(2n){background-color:#dee8f380}.responsive_table_rows .responsive_table_row:nth-child(odd){background-color:#f1f5fa80}.responsive_table_rows .responsive_table_row:hover{background-color:#c1d4e780;cursor:pointer}.responsive_table_rows .responsive_table_row.selected{background-color:#9cbad980}.responsive_table_rows .responsive_table_row .simple_row{flex-direction:row;display:flex;width:100%;height:100%}.responsive_table_rows .responsive_table_row .detail_row{box-shadow:inset 0 0 1px 1px #9cbad980;flex-direction:row;display:flex;width:100%}.responsive_table_rows .responsive_table_row .responsive_table_row_cell{display:flex;width:100%;min-width:100px;padding:2px;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center;font-size:14px}.responsive_table_rows .responsive_table_row .responsive_table_row_cell.hide{visibility:hidden}.responsive_table_rows .responsive_table_row .responsive_table_row_cell:last-child{border-right:none}.responsive_table_rows .example-list .example-box{cursor:move}.responsive_table_rows .cdk-drag-preview{background-color:red;box-sizing:border-box;height:50px;display:flex;width:100%;flex-direction:row;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.responsive_table_rows .cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder):nth-child(2n){background-color:#e2b38e}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder):nth-child(odd){background-color:#e8c0a2}::ng-deep .cdk-drag{background-color:#5287bd}::ng-deep .cdk-drag.responsive_table_row.cdk-drag-preview{background-color:#bc8ce8;display:flex;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center}::ng-deep .cdk-drag.responsive_table_row.cdk-drag-preview .simple_row{flex-direction:row;display:flex;width:100%;height:100%}::ng-deep .cdk-drag.responsive_table_row .responsive_table_row_cell{display:flex;width:100%;min-width:100px;padding:2px;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center}::ng-deep .cdk-drag.responsive_table_row .responsive_table_row_cell.hide{visibility:hidden}::ng-deep .cdk-drag.responsive_table_row .responsive_table_row_cell:last-child{border-right:none}\n"], dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i3.CdkDropList, selector: "[cdkDropList], cdk-drop-list", inputs: ["cdkDropListConnectedTo", "cdkDropListData", "cdkDropListOrientation", "id", "cdkDropListLockAxis", "cdkDropListDisabled", "cdkDropListSortingDisabled", "cdkDropListEnterPredicate", "cdkDropListSortPredicate", "cdkDropListAutoScrollDisabled", "cdkDropListAutoScrollStep"], outputs: ["cdkDropListDropped", "cdkDropListEntered", "cdkDropListExited", "cdkDropListSorted"], exportAs: ["cdkDropList"] }, { kind: "directive", type: i3.CdkDrag, selector: "[cdkDrag]", inputs: ["cdkDragData", "cdkDragLockAxis", "cdkDragRootElement", "cdkDragBoundary", "cdkDragStartDelay", "cdkDragFreeDragPosition", "cdkDragDisabled", "cdkDragConstrainPosition", "cdkDragPreviewClass", "cdkDragPreviewContainer"], outputs: ["cdkDragStarted", "cdkDragReleased", "cdkDragEnded", "cdkDragEntered", "cdkDragExited", "cdkDragDropped", "cdkDragMoved"], exportAs: ["cdkDrag"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ReactiveTableRowCellComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-reactive-table-row-cell', template: "<div class=\"responsive_table_rows\">\n\n  <div class=\"responsive_table_header_loading\" *ngIf=\"config && dataToDisplay?.length === 0\">\n    {{config.messageTableNoData}}\n  </div>\n\n<!--  <div class=\"responsive_table_row\">-->\n<!--    <div *ngFor=\"let att of columns;\" class=\"responsive_table_row_cell\"-->\n<!--         style=\"width: {{(att['width'] || att['style']?.['width'])+'px'}};-->\n<!--            max-width: {{(att['maxWidth'] || att['style']?.['maxWidth'])+'px'}};-->\n<!--            min-width: {{(att['minWidth'] || att['style']?.['minWidth'])+'px'}}\">[xxx]</div>-->\n<!--  </div>-->\n\n  <ng-container *ngIf=\"droggableRows; then templateDroggrable; else templateSimple\"></ng-container>\n  <ng-template #templateDroggrable>\n    <div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\n      <div *ngFor=\"let row of dataToDisplay; let i = index\"\n           class=\"responsive_table_row example-box\"\n           cdkDragBoundary=\"responsive_table_rows\"\n           cdkDrag\n           style=\"{{getRowHeight(row)}}\"\n           (cdkDragMoved)=\"stopOnMoved($event)\"\n           [class.selected] = \"rowClickIndex == i\"\n      >\n        <div class=\"simple_row\">\n          <ng-container *ngFor=\"let att of columns;\">\n            <div class=\"responsive_table_row_cell\"\n                 (click)=\"updateOnClickRow(row, row[att.key], i, att.key)\"\n                 style=\"{{getCellWidth(att)}}\"\n            >\n              <ng-container *ngIf=\"row[att.key] !== undefined; then _fullCell\"></ng-container>\n              <ng-template #_fullCell\n                           [ngTemplateOutlet]=\"att.cellTemplate\"\n                           [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: row[att.key], column: att.key, rowIndex: i}\">\n                <div *ngIf=\"!att.cellTemplate\">{{row[att.key]}}</div>\n              </ng-template>\n            </div>\n          </ng-container>\n        </div>\n\n        <div *ngIf=\"rowDetail && rowDetail.template && getIsExpanded(row)\" class=\"detail_row\" style=\"height:{{rowDetail?.rowDetailHeight+'px'}}\">\n          <ng-container [ngTemplateOutlet]=\"rowDetail.template\"\n                        [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: null, column: null, rowIndex: i}\"></ng-container>\n        </div>\n\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #templateSimple>\n    <div *ngFor=\"let row of dataToDisplay; let i = index\"\n         class=\"responsive_table_row\"\n         style=\"{{getRowHeight(row)}}\"\n         [class.selected] = \"rowClickIndex == i\">\n\n      <div class=\"simple_row\">\n        <ng-container *ngFor=\"let att of columns;\">\n          <div class=\"responsive_table_row_cell\"\n               (click)=\"updateOnClickRow(row, row[att.key], i, att.key)\"\n               style=\"{{getCellWidth(att)}}\"\n          >\n            <ng-container *ngIf=\"row[att.key] !== undefined; then fullCell\"></ng-container>\n            <ng-template #fullCell\n                         [ngTemplateOutlet]=\"att.cellTemplate\"\n                         [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: row[att.key], column: att.key, rowIndex: i}\">\n              <div *ngIf=\"!att.cellTemplate\">{{row[att.key]}}</div>\n            </ng-template>\n          </div>\n        </ng-container>\n      </div>\n\n      <div *ngIf=\"rowDetail && rowDetail.template && getIsExpanded(row)\" class=\"detail_row\" style=\"height:{{rowDetail?.rowDetailHeight+'px'}}\">\n        <ng-container [ngTemplateOutlet]=\"rowDetail.template\"\n                      [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: null, column: null, rowIndex: i}\"></ng-container>\n      </div>\n\n    </div>\n\n  </ng-template>\n\n</div>\n", styles: [".flex_column,.responsive_table_rows,:host,.flex_column_min_width_height{display:flex;flex:1;flex-direction:column}.flex_row{display:flex;flex:1;flex-direction:row}.max_height_width{height:100%;width:100%;min-width:0;min-height:0}.flex_column_min_width_height{min-width:0;min-height:0}*{scrollbar-width:thin;scrollbar-color:#5287bd #DFE9EB}*::-webkit-scrollbar{height:10px;width:10px}*::-webkit-scrollbar-track{border-radius:3px;background-color:#d3d8da}*::-webkit-scrollbar-track:hover{background-color:#b8c0c2}*::-webkit-scrollbar-track:active{background-color:#b8c0c2}*::-webkit-scrollbar-thumb{border-radius:3px;background-color:#5287bd}*::-webkit-scrollbar-thumb:hover{background-color:#77a1cb}*::-webkit-scrollbar-thumb:active{background-color:#3d6e9f}:host{overflow-y:scroll;overflow-x:hidden}.responsive_table_rows .responsive_table_header_loading{display:flex;justify-content:center}.responsive_table_rows .responsive_table_row{display:flex;flex-direction:row;width:100%;border-bottom:1px solid #e9e9e9}.responsive_table_rows .responsive_table_row:nth-child(2n){background-color:#dee8f380}.responsive_table_rows .responsive_table_row:nth-child(odd){background-color:#f1f5fa80}.responsive_table_rows .responsive_table_row:hover{background-color:#c1d4e780;cursor:pointer}.responsive_table_rows .responsive_table_row.selected{background-color:#9cbad980}.responsive_table_rows .responsive_table_row .simple_row{flex-direction:row;display:flex;width:100%;height:100%}.responsive_table_rows .responsive_table_row .detail_row{box-shadow:inset 0 0 1px 1px #9cbad980;flex-direction:row;display:flex;width:100%}.responsive_table_rows .responsive_table_row .responsive_table_row_cell{display:flex;width:100%;min-width:100px;padding:2px;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center;font-size:14px}.responsive_table_rows .responsive_table_row .responsive_table_row_cell.hide{visibility:hidden}.responsive_table_rows .responsive_table_row .responsive_table_row_cell:last-child{border-right:none}.responsive_table_rows .example-list .example-box{cursor:move}.responsive_table_rows .cdk-drag-preview{background-color:red;box-sizing:border-box;height:50px;display:flex;width:100%;flex-direction:row;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.responsive_table_rows .cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder):nth-child(2n){background-color:#e2b38e}.responsive_table_rows .example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder):nth-child(odd){background-color:#e8c0a2}::ng-deep .cdk-drag{background-color:#5287bd}::ng-deep .cdk-drag.responsive_table_row.cdk-drag-preview{background-color:#bc8ce8;display:flex;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center}::ng-deep .cdk-drag.responsive_table_row.cdk-drag-preview .simple_row{flex-direction:row;display:flex;width:100%;height:100%}::ng-deep .cdk-drag.responsive_table_row .responsive_table_row_cell{display:flex;width:100%;min-width:100px;padding:2px;border-right:1px solid #e9e9e9;overflow:hidden;align-items:center}::ng-deep .cdk-drag.responsive_table_row .responsive_table_row_cell.hide{visibility:hidden}::ng-deep .cdk-drag.responsive_table_row .responsive_table_row_cell:last-child{border-right:none}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.RowsService }]; }, propDecorators: { data: [{
                type: Input
            }], columns: [{
                type: Input
            }], config: [{
                type: Input
            }], droggableRows: [{
                type: Input
            }], rowDetail: [{
                type: Input
            }], onClickRow: [{
                type: Output
            }], onChangePositionRows: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,