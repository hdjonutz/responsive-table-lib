{"version":3,"file":"table-responsive.mjs","sources":["../../../projects/table-responsive/src/lib/components/table-responsive-interface.ts","../../../projects/table-responsive/src/lib/directive/column/column-cell.directive.ts","../../../projects/table-responsive/src/lib/directive/column/column-header.directive.ts","../../../projects/table-responsive/src/lib/directive/column/column.directive.ts","../../../projects/table-responsive/src/lib/directive/row-detail/row-detail-template.directive.ts","../../../projects/table-responsive/src/lib/services/rows.service.ts","../../../projects/table-responsive/src/lib/directive/row-detail/row-detail.directive.ts","../../../projects/table-responsive/src/lib/components/table-header/table-header.component.ts","../../../projects/table-responsive/src/lib/components/table-header/table-header.component.html","../../../projects/table-responsive/src/lib/components/reactive-table-row-cell/reactive-table-row-cell.component.ts","../../../projects/table-responsive/src/lib/components/reactive-table-row-cell/reactive-table-row-cell.component.html","../../../projects/table-responsive/src/lib/components/table-body/table-body.component.ts","../../../projects/table-responsive/src/lib/components/table-body/table-body.component.html","../../../projects/table-responsive/src/lib/components/table-footer/table-footer.component.ts","../../../projects/table-responsive/src/lib/components/table-footer/table-footer.component.html","../../../projects/table-responsive/src/lib/components/table-responsive.component.ts","../../../projects/table-responsive/src/lib/components/table-responsive.component.html","../../../projects/table-responsive/src/lib/table-responsive.service.ts","../../../projects/table-responsive/src/lib/components/app-reactive-table-footer/app-reactive-table-footer.component.ts","../../../projects/table-responsive/src/lib/components/app-reactive-table-footer/app-reactive-table-footer.component.html","../../../projects/table-responsive/src/lib/pipes/keysValues.pipe.ts","../../../projects/table-responsive/src/lib/table-responsive.module.ts","../../../projects/table-responsive/src/public-api.ts","../../../projects/table-responsive/src/table-responsive.ts"],"sourcesContent":["\r\nexport enum IStates {\r\n  SmallerToBigger,\r\n  BiggerToSmaller,\r\n  Nothing,\r\n}\r\n\r\nexport enum SelectionType {\r\n  multi= 'multi',\r\n  simple = 'simple',\r\n}\r\n\r\nexport interface IResponsiveTableConfig {\r\n  showCheckHeader:      boolean;       // display check to select\r\n  displayTableName:     boolean;\r\n  displayFooter:        boolean;\r\n  headerHeight?:        number; // default empty;\r\n  footerHeight?:        number; // default empty;\r\n  rowHeight:            number;\r\n  showLoading:          boolean;\r\n  scrollV:              boolean;    // not implemented DEFAULT\r\n  scrollH:              boolean;    // not implemented,\r\n  language:             string;\r\n  messageTableNoData:   string;\r\n\r\n  selectionType:        SelectionType;\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({ selector: '[lib-table-responsive-cell-template]' })\r\nexport class DataTableColumnCellDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({ selector: '[lib-table-responsive-header-template]' })\r\nexport class DataTableColumnHeaderDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import {Directive, TemplateRef, ContentChild, Input, OnChanges, SimpleChanges} from '@angular/core';\r\nimport {DataTableColumnCellDirective} from \"./column-cell.directive\";\r\nimport {DataTableColumnHeaderDirective} from \"./column-header.directive\";\r\n\r\n@Directive({ selector: 'lib-table-responsive-column' })\r\nexport class DataTableColumnDirective {\r\n  @Input() name!: string;\r\n  @Input() key!: string;\r\n  @Input() minWidth!: number;\r\n  @Input() width!: number;\r\n  @Input() maxWidth!: number;\r\n  @Input() style!: {minWidth: number, maxWidth: number; width: number};\r\n\r\n  @Input('cellTemplate')\r\n  _cellTemplateInput!: TemplateRef<any>;\r\n\r\n  @ContentChild(DataTableColumnCellDirective, { read: TemplateRef, static: false })\r\n  _cellTemplateQuery!: TemplateRef<any>;\r\n\r\n  get cellTemplate(): TemplateRef<any> {\r\n    return this._cellTemplateInput || this._cellTemplateQuery;\r\n  }\r\n\r\n  @Input('headerTemplate')\r\n  _headerTemplateInput!: TemplateRef<any>;\r\n\r\n  @ContentChild(DataTableColumnHeaderDirective, { read: TemplateRef, static: false })\r\n  _headerTemplateQuery!: TemplateRef<any>;\r\n\r\n  get headerTemplate(): TemplateRef<any> {\r\n    return this._headerTemplateInput || this._headerTemplateQuery;\r\n  }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[lib-table-responsive-row-detail-template]'\r\n})\r\nexport class DatatableRowDetailTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Observable, of, ReplaySubject} from \"rxjs\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RowsService {\r\n  private rowsExpandedObservable: ReplaySubject<Array<{[key: string]: any}>> = new ReplaySubject<Array<{[key: string]: any}>>(1);\r\n  rowsExpanded:  Array<{[key: string]: any}> = [];\r\n  constructor() {\r\n    this.rowsExpandedObservable.next(this.rowsExpanded);\r\n  }\r\n\r\n  setRows(row: {[key: string]: any}) {\r\n    const found = this.isExpanded(row);\r\n    if (found) {\r\n      this.rowsExpanded = this.rowsExpanded.filter((r) => JSON.stringify(row) !== JSON.stringify(r));\r\n    } else {\r\n      this.rowsExpanded.push(row);\r\n    }\r\n    this.rowsExpandedObservable.next(this.rowsExpanded);\r\n  }\r\n  isExpanded(row: {[key: string]: any}): boolean {\r\n    return !!this.rowsExpanded.find((r) => JSON.stringify(row) === JSON.stringify(r));\r\n  }\r\n  getChanges(): Observable<Array<{[key: string]: any}>> {\r\n    return this.rowsExpandedObservable;\r\n  }\r\n}\r\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\r\nimport { DatatableRowDetailTemplateDirective } from './row-detail-template.directive';\r\nimport {RowsService} from \"../../services/rows.service\";\r\n\r\n@Directive({ selector: 'lib-table-responsive-row-detail' })\r\nexport class DatatableRowDetailDirective {\r\n  constructor(private rowService: RowsService){}\r\n\r\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\r\n  @Input('template')\r\n  _templateInput!: TemplateRef<any>;\r\n\r\n  @ContentChild(DatatableRowDetailTemplateDirective, { read: TemplateRef, static: true })\r\n  _templateQuery!: TemplateRef<any>;\r\n\r\n  get template(): TemplateRef<any> {\r\n    return this._templateInput || this._templateQuery;\r\n  }\r\n\r\n  @Input('rowDetailHeight')\r\n  rowDetailHeight!: number;\r\n\r\n  // this will be from outside called onClick button\r\n  toggleExpandRow(row: any): void {\r\n    this.toggle?.emit({value: row});\r\n    this.rowService.setRows(row);\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport {IStates} from \"../table-responsive-interface\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-table-header',\r\n  templateUrl: './table-header.component.html',\r\n  styleUrls: ['./table-header.component.scss'],\r\n})\r\nexport class TableHeaderComponent implements OnInit, AfterViewInit {\r\n  protected readonly IStates = IStates;\r\n\r\n  selectToAction: {[key: string]: IStates} = {};\r\n  stateFilterText: {[key: string]: string} = {};\r\n\r\n  @Input() columns!: Array<any>;\r\n  @Input() headerHeight!: number;\r\n  @Input() allRowsSelected!: Array<any>;\r\n  @Input() selectionType: 'simple'|'multi' = 'simple';\r\n  @Input() droggableColumns!: boolean;\r\n\r\n\r\n  @Output() select: EventEmitter<any> = new EventEmitter();\r\n  @Output() onInputTextKey = new EventEmitter();\r\n  @Output() onInputSortKey = new EventEmitter();\r\n\r\n  @Output() addItem = new EventEmitter();\r\n  @Output() refresh = new EventEmitter();\r\n\r\n  // @ViewChild ('headerRefElement', { read: ViewContainerRef, static: false }) headerRef: ViewContainerRef | undefined;\r\n  @ViewChild('headerRefElement') headerRef?: ElementRef;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.columns.forEach((k: {key: string; title: string}) => {\r\n      this.selectToAction[k.key] = IStates.Nothing;\r\n      this.stateFilterText[k.key] = '';\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // column\r\n    // key:  \".....\"\r\n    // name: \"....\"\r\n    // maxWidth:            100\r\n    // minWidth:            30\r\n    // remainingAutoFill:   false\r\n    // width:               50\r\n\r\n    console.log(this.headerRef);\r\n    const width = this.headerRef?.nativeElement.clientWidth;\r\n    this.columns\r\n    debugger;\r\n  }\r\n\r\n  changeTo(nameAction: IStates, key: string) {\r\n    this.selectToAction[key] = nameAction;\r\n    this.onInputSortKey.emit({direction: nameAction, key: key});\r\n  }\r\n\r\n  updateFilterText(event: KeyboardEvent, key: string) {\r\n    const val = (event.target as any).value;\r\n    this.stateFilterText[key] = val;\r\n    this.onInputTextKey.emit({value: val, key: key});\r\n  }\r\n}\r\n","<div class=\"responsive_table_header\" style=\"{{headerHeight ? {'height': headerHeight+'px'} : ''}}\" #headerRefElement>\r\n\r\n  <div *ngFor=\"let att of columns; let i = index\"\r\n       class=\"column_responsive_table_header\"\r\n       style=\"width: {{(att['width'] || att['style']?.['width'])+'px'}};\r\n              max-width: {{(att['maxWidth'] || att['style']?.['maxWidth'])+'px'}};\r\n              min-width: {{(att['minWidth'] || att['style']?.['minWidth'])+'px'}}\">\r\n    <div class=\"header_title\">{{att['name']}} &nbsp;</div>\r\n\r\n\r\n    <div class=\"header_inputs_filter_sort\">\r\n      <ng-container *ngIf=\"att['key'] !=='' && !att['_headerTemplateInput']; then headFilter; else noKeyPropButtons\"></ng-container>\r\n      <ng-template #headFilter>\r\n        <div class=\"inputFilterText\">\r\n          <input value=\"{{stateFilterText[att['key']]}}\" (keyup)=\"updateFilterText($event, att['key'])\">\r\n        </div>\r\n        <div class=\"inputSortText\">\r\n\r\n          <div class=\"sortTriangle\"\r\n               [class.hide]=\"!(selectToAction[att['key']] === IStates.SmallerToBigger)\"\r\n               (click)=\"changeTo(IStates.Nothing, att['key'])\">▲</div>\r\n          <div class=\"sortTriangle\"\r\n               [class.hide]=\"!(selectToAction[att['key']] === IStates.BiggerToSmaller)\"\r\n               (click)=\"changeTo(IStates.SmallerToBigger, att['key'])\">▼</div>\r\n          <div class=\"sortTriangle\"\r\n               [class.hide]=\"!(selectToAction[att['key']] === IStates.Nothing)\"\r\n               (click)=\"changeTo(IStates.BiggerToSmaller, att['key'])\" style=\"font-size: 15px\">□</div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template #noKeyPropButtons [ngTemplateOutlet]=\"att['_headerTemplateInput']\"></ng-template>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges, OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {IResponsiveTableConfig} from \"../table-responsive-interface\";\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {DatatableRowDetailDirective} from \"../../directive/row-detail/row-detail.directive\";\nimport {RowsService} from \"../../services/rows.service\";\nimport {Observable, Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-reactive-table-row-cell',\n  templateUrl: './reactive-table-row-cell.component.html',\n  styleUrls: ['./reactive-table-row-cell.component.scss'],\n})\nexport class ReactiveTableRowCellComponent implements OnInit, OnChanges, OnDestroy {\n\n  rowClickIndex:  number = null as any;\n  rowsExpanded:   Array<{[key: string]: any}> = [];\n  rowsObs!:       Subscription;\n\n  @Input() data!:     Array<{[key: string]: string|number}>;\n  @Input() columns!:  Array<any>;\n  @Input() config!:   IResponsiveTableConfig;\n  @Input() droggableRows!: boolean;\n  @Input() rowDetail!: DatatableRowDetailDirective;\n\n  @Output() onClickRow = new EventEmitter<{row: any; item: any; index: number; key: string}>();\n  @Output() onChangePositionRows = new EventEmitter<Array<{[key: string]: string|number}>>();\n\n  _tableBody!: ElementRef;\n  dataToDisplay!: Array<{[key: string]: any}>;\n\n  constructor(tableBody: ElementRef, private rowService: RowsService) {\n    this._tableBody = tableBody;\n  }\n\n  ngOnInit(): void {\n    this.rowsObs = this.rowService.getChanges().subscribe((res) => this.rowsExpanded = res);\n  }\n  ngOnDestroy() {\n    this.rowsObs?.unsubscribe();\n  }\n\n  updateOnClickRow(row: {[key: string]: any}, cell: {[key: string]: any}, index: number, key: string) {\n    this.rowClickIndex = index;\n    this.onClickRow?.emit({row: row, item: cell, index: index, key: key});\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.['data'].currentValue) {\n      this.dataToDisplay = [...changes?.['data'].currentValue];\n    }\n  }\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.data, event.previousIndex, event.currentIndex);\n    this.onChangePositionRows?.emit(this.data);\n  }\n\n  getIsExpanded(row: {[key: string]: any}): boolean {\n    return !!this.rowsExpanded.find((r) => JSON.stringify(row) === JSON.stringify(r));\n  }\n}\n","<div class=\"responsive_table_rows\">\n\n  <div class=\"responsive_table_header_loading\" *ngIf=\"config && dataToDisplay?.length === 0\">\n    {{config.messageTableNoData}}\n  </div>\n\n<!--  <div class=\"responsive_table_row\">-->\n<!--    <div *ngFor=\"let att of columns;\" class=\"responsive_table_row_cell\"-->\n<!--         style=\"width: {{(att['width'] || att['style']?.['width'])+'px'}};-->\n<!--            max-width: {{(att['maxWidth'] || att['style']?.['maxWidth'])+'px'}};-->\n<!--            min-width: {{(att['minWidth'] || att['style']?.['minWidth'])+'px'}}\">[xxx]</div>-->\n<!--  </div>-->\n\n  <ng-container *ngIf=\"droggableRows; then templateDroggrable; else templateSimple\"></ng-container>\n  <ng-template #templateDroggrable>\n    <div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\n      <div *ngFor=\"let row of dataToDisplay; let i = index\"\n           class=\"responsive_table_row example-box\"\n           cdkDragBoundary=\".responsive_table_rows\"\n           cdkDrag\n           style=\"flex-direction: column; height:{{(config.rowHeight+(getIsExpanded(row) && rowDetail ? rowDetail.rowDetailHeight : 0))+'px'}}\"\n           [class.selected] = \"rowClickIndex == i\"\n      >\n        <div class=\"simple_row\">\n          <ng-container *ngFor=\"let att of columns;\">\n            <div class=\"responsive_table_row_cell\"\n                 (click)=\"updateOnClickRow(row, row[att.key], i, att.key)\"\n                 style=\"width: {{(att['width'] || att['style']?.['width'])+'px'}};\n                  max-width: {{(att['maxWidth'] || att['style']?.['maxWidth'])+'px'}};\n                  min-width: {{(att['minWidth'] || att['style']?.['minWidth'])+'px'}}\"\n            >\n              <ng-container *ngIf=\"row[att.key] !== undefined; then _fullCell; else _emptyCellTemplateOutlet\"></ng-container>\n              <ng-template #_fullCell\n                           [ngTemplateOutlet]=\"att.cellTemplate\"\n                           [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: row[att.key], column: att.key, rowIndex: i}\">\n                <div *ngIf=\"!att.cellTemplate\">{{row[att.key]}}</div>\n              </ng-template>\n              <ng-template #_emptyCellTemplateOutlet>\n                <!--                    <div [ngTemplateOutlet]=\"att.cellTemplate\"></div>-->\n              </ng-template>\n            </div>\n          </ng-container>\n        </div>\n\n        <div *ngIf=\"rowDetail && rowDetail.template && getIsExpanded(row)\" class=\"detail_row\" style=\"height:{{rowDetail?.rowDetailHeight+'px'}}\">\n          <ng-container [ngTemplateOutlet]=\"rowDetail.template\"\n                        [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: null, column: null, rowIndex: i}\"></ng-container>\n        </div>\n\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #templateSimple>\n    <div *ngFor=\"let row of dataToDisplay; let i = index\" class=\"responsive_table_row\"\n         style=\"height:{{config.rowHeight+'px'}}\"\n         [class.selected] = \"rowClickIndex == i\">\n\n      <div class=\"simple_row\">\n        <ng-container *ngFor=\"let att of columns;\">\n          <div class=\"responsive_table_row_cell\"\n               (click)=\"updateOnClickRow(row, row[att.key], i, att.key)\"\n               style=\"width: {{(att['width'] || att['style']?.['width'])+'px'}};\n            max-width: {{(att['maxWidth'] || att['style']?.['maxWidth'])+'px'}};\n            min-width: {{(att['minWidth'] || att['style']?.['minWidth'])+'px'}}\"\n          >\n            <ng-container *ngIf=\"row[att.key] !== undefined; then fullCell; else emptyCellTemplateOutlet\"></ng-container>\n            <ng-template #fullCell\n                         [ngTemplateOutlet]=\"att.cellTemplate\"\n                         [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: row[att.key], column: att.key, rowIndex: i}\">\n              <div *ngIf=\"!att.cellTemplate\">{{row[att.key]}}</div>\n            </ng-template>\n            <ng-template #emptyCellTemplateOutlet>\n              <!--            <div [ngTemplateOutlet]=\"att.cellTemplate\"></div>-->\n            </ng-template>\n            <ng-container *ngIf=\"rowDetail && rowDetail.template\"\n                          [ngTemplateOutlet]=\"rowDetail.template\"\n                          [ngTemplateOutletContext]=\"{row: row, value: null}\">\n            </ng-container>\n          </div>\n        </ng-container>\n      </div>\n      <div *ngIf=\"rowDetail && rowDetail.template && getIsExpanded(row)\" class=\"detail_row\" style=\"height:{{rowDetail?.rowDetailHeight+'px'}}\">\n        <ng-container [ngTemplateOutlet]=\"rowDetail.template\"\n                      [ngTemplateOutletContext]=\"{row: row, expanded: getIsExpanded(row), value: null, column: null, rowIndex: i}\"></ng-container>\n      </div>\n\n    </div>\n\n  </ng-template>\n\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {IResponsiveTableConfig} from \"../table-responsive-interface\";\r\nimport {DatatableRowDetailDirective} from \"../../directive/row-detail/row-detail.directive\";\r\n\r\n@Component({\r\n  selector: 'app-table-body',\r\n  templateUrl: './table-body.component.html',\r\n  styleUrls: ['./table-body.component.scss'],\r\n})\r\nexport class TableBodyComponent implements OnInit, OnChanges {\r\n  @Input() config!: IResponsiveTableConfig;\r\n  @Input() columns!: Array<any>;\r\n  @Input() rows!: Array<any>;\r\n  @Input() scrollbarV: boolean = true;\r\n  @Input() scrollbarH: boolean = false;\r\n  @Input() loadingIndicator: boolean = true;\r\n\r\n  @Input() rowHeight: number = 50;\r\n  @Input() rowCount: string = '';\r\n\r\n  @Input() pageSize!: number;\r\n  @Input() rowDetail!: DatatableRowDetailDirective;\r\n  @Input() rowClass!: {keyIndex: string, className: boolean, row: any};\r\n  @Input() selected: Array<any> = [];\r\n  @Input() droggableRows!: boolean;\r\n\r\n  @Output() page: EventEmitter<any> = new EventEmitter();\r\n  @Output() select: EventEmitter<any> = new EventEmitter();\r\n  @Output() onChangePositionRows: EventEmitter<Array<{[key: string]: string|number}>> = new EventEmitter<Array<{[key: string]: string|number}>>();\r\n  @Output() scroll: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  internalRows!: Array<any>;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.internalRows = changes['rows']?.currentValue;\r\n    console.log('received: ', this.internalRows);\r\n  }\r\n\r\n}\r\n","<div class=\"responsive_table_header_loading\" *ngIf=\"loadingIndicator && !rows\">\r\n  <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n</div>\r\n\r\n<mat-divider></mat-divider>\r\n\r\n<div class=\"responsive_table_body\">\r\n  <app-reactive-table-row-cell [data]         =\"internalRows\"\r\n                               [columns]      =\"columns\"\r\n                               [config]       =\"config\"\r\n                               [rowDetail]    =\"rowDetail\"\r\n                               [droggableRows]=\"droggableRows\"\r\n                               (onChangePositionRows)=\"onChangePositionRows.emit($event)\"\r\n                               (onClickRow)   =\"select.emit($event)\">\r\n  </app-reactive-table-row-cell>\r\n</div>\r\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-table-footer',\r\n  templateUrl: './table-footer.component.html',\r\n  styleUrls: ['./table-footer.component.scss'],\r\n})\r\nexport class TableFooterComponent {\r\n  @Input() rowCount:      string = '';\r\n  @Input() pageSize!:     number;\r\n  @Input() footerHeight:  number = 50;\r\n  @Input() totalMessage:  string = 'No Data';\r\n\r\n  @Output() page: EventEmitter<any> = new EventEmitter();\r\n\r\n}\r\n","","import {\n  Component, ContentChild,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges\n} from '@angular/core';\nimport {IResponsiveTableConfig, IStates, SelectionType} from \"./table-responsive-interface\";\nimport {DataTableColumnDirective} from \"../directive/column/column.directive\";\nimport {DatatableRowDetailDirective} from \"../directive/row-detail/row-detail.directive\";\n\n@Component({\n  selector: 'lib-table-responsive',\n  templateUrl: './table-responsive.component.html',\n  styleUrls: ['./table-responsive.component.scss']\n})\nexport class TableResponsiveComponent implements OnInit, OnChanges {\n  protected selectionType: SelectionType = SelectionType.simple;\n\n  _internalColumns: Array<any> = [];\n\n  HEIGHT_HEADER!: number;\n  HEIGHT_FOOTER!: number;\n  HEIGHT_ROW      = 50;\n\n  tabledata!: Array<{ [key: string]: any }>;\n  tabledataFiltered!: Array<{ [key: string]: any }>;\n  filterHeader: Array<{ key: string; value: string }>     = [];\n  sortHeader: Array<{ key: string; direction: IStates }>  = [];\n  pageSize: number                                        = Infinity;\n  // rowDetail!: {keyIndex: string, show: boolean, row: any};\n  rowClass!: {keyIndex: string, className: boolean, row: any};\n\n  @Input() rows!:     Array<{[key: string]: any}>;\n  @Input() config!:   IResponsiveTableConfig;\n  @Input() selected:  Array<any> = [];\n\n  @Input() droggableColumns!: boolean;\n  @Input() droggableRows!: boolean;\n\n\n  @Output() activate = new EventEmitter();\n\n  @Output() refreshProp = new EventEmitter();\n  @Output() addItemProp = new EventEmitter();\n  @Output() onChangePositionRows: EventEmitter<Array<{[key:string]: any}>> = new EventEmitter<Array<{[p: string]: any}>>();\n\n  _columnTemplates!: QueryList<DataTableColumnDirective>;\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['rows']?.currentValue) {\n      this.tabledata =          [...changes['rows'].currentValue];\n      this.tabledataFiltered =  [...changes['rows'].currentValue];\n      console.log('Table receive data.length:'  +this.tabledataFiltered.length);\n    }\n    if (changes['selected']?.currentValue) {\n      this.selected = changes['selected']?.currentValue;\n    }\n  }\n\n  ngOnInit(): void {\n    this.HEIGHT_HEADER = this.config?.headerHeight ? this.config.headerHeight : this.HEIGHT_HEADER;\n    this.HEIGHT_FOOTER = this.config?.footerHeight ? this.config.footerHeight : this.HEIGHT_FOOTER;\n    this.HEIGHT_FOOTER = this.config?.rowHeight ? this.config.rowHeight : this.HEIGHT_ROW;\n  }\n\n  /**\n   * Column templates gathered from `ContentChildren`\n   * if described in your markup.\n   */\n  @ContentChildren(DataTableColumnDirective)\n  set columnTemplates(val: QueryList<DataTableColumnDirective>) {\n    this._columnTemplates = val;\n    this._internalColumns = val.toArray();\n  }\n\n  @ContentChild(DatatableRowDetailDirective)\n  rowDetail!: DatatableRowDetailDirective;\n\n  /**\n   * Returns the column templates.\n   */\n  get columnTemplates(): QueryList<DataTableColumnDirective> {\n    return this._columnTemplates;\n  }\n\n  updateFilterInput(keyFilter: {value: string, key: string}) {\n    this.tabledata = this.rows;\n\n    const foundIndex = this.filterHeader.findIndex((f) => f.key === keyFilter.key);\n    if (foundIndex >= 0) {\n      // updateFilter from header\n      this.filterHeader[foundIndex].value = keyFilter.value;\n    } else {\n      this.filterHeader.push({key: keyFilter.key, value: keyFilter.value});\n    }\n    this.tabledata = this.rows;\n    this.filterHeader.forEach((keyValFilter) => {\n      this.tabledata = this.tabledata.filter((o) => (o[keyValFilter.key] + '').toLowerCase().indexOf((keyValFilter.value + '').toLowerCase()) >= 0);\n    });\n    this.tabledataFiltered = this.tabledata;\n  }\n\n  sortColumnFilterInput(sort: {direction: IStates, key: string}) {\n    // performance -> do not call again updateFilterInput reason on original daten;\n    this.tabledata = [...this.tabledataFiltered];\n\n    const foundIndex = this.sortHeader.findIndex((f) => f.key === sort.key);\n    if (foundIndex >= 0) {\n      // updateFilter from header\n      this.sortHeader[foundIndex].direction = sort.direction;\n    } else {\n      this.sortHeader.push({key: sort.key, direction: sort.direction});\n    }\n    this.sortHeader = this.sortHeader.filter((f) => f.direction !== IStates.Nothing);\n\n    const sortByAllKeys = (a: {[key: string]: any}, b: {[key: string]: any}): number => {\n      const arr: Array<number> = [];\n      this.sortHeader.forEach((r) => {\n        let res = (a[r.key] + '')['localeCompare'](b[r.key] + '', 'de', { numeric: true, sensitivity: 'base' });\n        res = res === 0\n          ? res\n          : (r.direction === IStates.BiggerToSmaller ? res * -1 : res)\n        arr.push(res);\n      });\n      return arr[0]; // arr.some((s) => s === -1) ? -1 : 1;\n    };\n\n    if (this.sortHeader.length > 0) {\n      this.tabledata.sort((a: {[key: string]: any}, b: {[key: string]: any}) => {\n        return sortByAllKeys(a, b); // (a[sort.key] + '')['localeCompare'](b[sort.key] + '', 'de', { numeric: true });\n      });\n      // if (sort.direction === IStates.BiggerToSmaller) {\n      //   this.tabledata.reverse();\n      // }\n    }\n  }\n\n  positionRowsChanged(data: Array<{[key:string]: any}>): void {\n    this.tabledata = [...data];\n    this.tabledataFiltered = [...data];\n    this.onChangePositionRows.emit(data);\n  }\n\n  onHeaderSelect(event: any) {\n\n  }\n  onBodyPage(event: any) {\n\n  }\n  onSelectRow(rowKeyValuesIndex: {[key: string]: any}): void {\n    this.activate?.emit(rowKeyValuesIndex);\n  }\n  onBodyScroll(event: any) {\n\n  }\n  onFooterPage(event: any) {\n\n  }\n\n}\n","<div class=\"responsive_table\">\n\n  <app-table-header\n    [columns]=\"_internalColumns\"\n    [headerHeight]=\"HEIGHT_HEADER\"\n    [allRowsSelected]=\"selected\"\n    [selectionType]=\"selectionType\"\n    [droggableColumns]=\"droggableColumns\"\n    (select)=\"onHeaderSelect($event)\"\n    (onInputTextKey)=\"updateFilterInput($event)\"\n    (onInputSortKey)=\"sortColumnFilterInput($event)\"\n  ></app-table-header>\n  <app-table-body\n    [config]=\"config\"\n    [rows]=\"tabledata\"\n    [scrollbarV]=\"config.scrollV\"\n    [scrollbarH]=\"config.scrollH\"\n    [loadingIndicator]=\"config.showLoading\"\n    [rowHeight]=\"config.rowHeight\"\n    [rowCount]=\"tabledataFiltered?.length + ''\"\n    [columns]=\"_internalColumns\"\n    [pageSize]=\"pageSize\"\n    [rowDetail]=\"rowDetail\"\n    [rowClass]=\"rowClass\"\n    [selected]=\"selected\"\n    [droggableRows]=\"droggableRows\"\n    (onChangePositionRows)=\"positionRowsChanged($event)\"\n    (page)=\"onBodyPage($event)\"\n    (select)=\"onSelectRow($event)\"\n    (scroll)=\"onBodyScroll($event)\"\n  ></app-table-body>\n  <app-table-footer\n    [rowCount]=\"tabledataFiltered?.length + ''\"\n    [pageSize]=\"pageSize\"\n    [footerHeight]=\"HEIGHT_FOOTER\"\n    [totalMessage]=\"config.messageTableNoData\"\n    (page)=\"onFooterPage($event)\"\n  ></app-table-footer>\n\n<!--  <div *ngIf=\"config.displayTableName\"> &#45;&#45;NAme&#45;&#45; </div>-->\n\n<!--  <mat-divider></mat-divider>-->\n<!--  <div class=\"responsive_table_header\" style=\"height: {{HEIGHT_HEADER}}\">-->\n<!--    <mat-divider vertical=\"true\"></mat-divider>-->\n<!--    <app-reactive-table-inputs-filter [attr]=\"struct\"-->\n<!--                                      (onInputTextKey)=\"updateFilterInput($event)\"-->\n<!--                                      (onInputSortKey)=\"sortColumnFilterInput($event)\"-->\n<!--                                      (addItem)=\"addItemProp.emit()\"-->\n<!--                                      (refresh)=\"refreshProp.emit()\"-->\n<!--    >-->\n<!--    </app-reactive-table-inputs-filter>-->\n<!--    <mat-divider vertical=\"true\"></mat-divider>-->\n<!--  </div>-->\n\n<!--  <div class=\"responsive_table_header_loading\" *ngIf=\"config?.showLoading && !rows\">-->\n<!--    <mat-divider></mat-divider>-->\n<!--    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>-->\n<!--  </div>-->\n\n<!--  <mat-divider></mat-divider>-->\n\n<!--  <div class=\"responsive_table_body\">-->\n<!--    <mat-divider vertical=\"true\"></mat-divider>-->\n<!--    <app-reactive-table-row-cell [data]=\"tabledata\"-->\n<!--                                 [attr]=\"struct\"-->\n<!--                                 (onClickRow)=\"config.onSelectRow($event)\"-->\n<!--                                 [config]=\"config\"-->\n<!--    >-->\n<!--    </app-reactive-table-row-cell>-->\n<!--    <mat-divider vertical=\"true\"></mat-divider>-->\n<!--  </div>-->\n\n<!--  <mat-divider></mat-divider>-->\n<!--  <div *ngIf=\"!config?.displayFooter === false\" class=\"responsive_table_footer\" style=\"height: {{HEIGHT_FOOTER}}\">-->\n<!--    <mat-divider vertical=\"true\"></mat-divider>-->\n<!--    <app-app-reactive-table-footer></app-app-reactive-table-footer>-->\n<!--    <mat-divider vertical=\"true\" style=\"height: 100%\"></mat-divider>-->\n<!--  </div>-->\n<!--  <mat-divider></mat-divider>-->\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableResponsiveService {\n\n  constructor() { }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-app-reactive-table-footer',\n  templateUrl: './app-reactive-table-footer.component.html',\n  styleUrls: ['./app-reactive-table-footer.component.scss']\n})\nexport class AppReactiveTableFooterComponent {\n\n}\n","<p>app-reactive-table-footer works!</p>\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'KeysValuesPipe',\r\n})\r\nexport class KeysValuesPipe implements PipeTransform {\r\n\r\n  constructor() { }\r\n\r\n  transform(dataObj: {[key: string]: number|string}): Array<{key: string, value: any}> {\r\n    const toArr: Array<{key: string, value: any}> = [];\r\n    Object.keys(dataObj).forEach((k: string) => toArr.push({key: k, value: dataObj[k]}));\r\n    return toArr;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { TableResponsiveComponent } from './components/table-responsive.component';\nimport {AppReactiveTableFooterComponent} from \"./components/app-reactive-table-footer/app-reactive-table-footer.component\";\nimport {ReactiveTableRowCellComponent} from \"./components/reactive-table-row-cell/reactive-table-row-cell.component\";\n\nimport {KeysValuesPipe} from \"./pipes/keysValues.pipe\";\n\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {MatDividerModule} from \"@angular/material/divider\";\nimport {MatProgressBarModule} from \"@angular/material/progress-bar\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {DataTableColumnDirective} from \"./directive/column/column.directive\";\nimport {DataTableColumnCellDirective} from \"./directive/column/column-cell.directive\";\nimport {TableBodyComponent} from \"./components/table-body/table-body.component\";\nimport {TableHeaderComponent} from \"./components/table-header/table-header.component\";\nimport {TableFooterComponent} from \"./components/table-footer/table-footer.component\";\nimport {DataTableColumnHeaderDirective} from \"./directive/column/column-header.directive\";\nimport {CdkDropList, CdkDrag} from '@angular/cdk/drag-drop';\nimport {DatatableRowDetailTemplateDirective} from \"./directive/row-detail/row-detail-template.directive\";\nimport {DatatableRowDetailDirective} from \"./directive/row-detail/row-detail.directive\";\n\n@NgModule({\n  declarations: [\n    TableResponsiveComponent,\n    ReactiveTableRowCellComponent,\n    KeysValuesPipe,\n    AppReactiveTableFooterComponent,\n    DataTableColumnDirective,\n    DataTableColumnHeaderDirective,\n    DataTableColumnCellDirective,\n\n    DatatableRowDetailDirective,\n    DatatableRowDetailTemplateDirective,\n\n    TableHeaderComponent,\n    TableBodyComponent,\n    TableFooterComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatDividerModule,\n    MatProgressBarModule,\n    CdkDropList,\n    CdkDrag\n  ],\n  exports: [\n    TableResponsiveComponent,\n    DataTableColumnDirective,\n    DataTableColumnHeaderDirective,\n    DataTableColumnCellDirective,\n\n    DatatableRowDetailDirective,\n    DatatableRowDetailTemplateDirective,\n  ]\n})\nexport class TableResponsiveModule { }\n","/*\n * Public API Surface of table-responsive\n */\n\nexport * from './lib/components/table-responsive.component';\nexport * from './lib/components/table-responsive-interface';\n\nexport * from './lib/table-responsive.service';\nexport * from './lib/table-responsive.module';\n\nexport * from './lib/directive/column/column.directive';\nexport * from './lib/directive/column/column-cell.directive';\nexport * from './lib/directive/column/column-header.directive';\n\nexport * from './lib/directive/row-detail/row-detail.directive';\nexport * from './lib/directive/row-detail/row-detail-template.directive';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.RowsService","i2","i3","i4.ReactiveTableRowCellComponent","i1.TableHeaderComponent","i2.TableBodyComponent","i3.TableFooterComponent"],"mappings":"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"}